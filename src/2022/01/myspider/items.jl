{"href": "https://www.cnpython.com/qa/1473051", "title": "\u5982\u4f55\u5728django CBV\u5185\u90e8\u4f7f\u7528CreateView\u521b\u5efa\u5bf9\u8c61\u540e\u83b7\u53d6\u5bf9\u8c61", "content": "<div class=\"show-content\"><p>\u6211\u6b63\u5728\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u8ddf\u8e2a\u6211\u7684\u7528\u6237\u6240\u6709\u6d3b\u52a8\u7684\u901a\u77e5\u7cfb\u7edf\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u521b\u5efa\u4e86\u4e24\u4e2a\u6a21\u578b\uff0c\u8d21\u732e\u6a21\u578b\u548c\u901a\u77e5\u6a21\u578b</p><pre><code>class Contribution(models.Model):\n    slug            =   models.SlugField(unique=True, blank=True, null=True)\n    user            =   models.ForeignKey(User, on_delete=models.PROTECT)\n    amount          =   models.DecimalField(default=0.00, max_digits=6, decimal_places=2)\n    zanaco_id       =   models.CharField(max_length=20, blank=True, unique=True, null=True)\n\nclass Notification(models.Model):\n    slug        =   models.SlugField(unique=True, blank=True)\n    content_type    =   models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id       =   models.PositiveIntegerField()\n    content_object  =   GenericForeignKey('content_type', 'object_id')\n    message         =   models.TextField(null=True)\n</code></pre><p>\u6211\u60f3\u5728\u7528\u6237\u6bcf\u6b21\u5728\u8d21\u732e\u8868\u4e2d\u521b\u5efa\u5bf9\u8c61\u65f6\u521b\u5efa\u4e00\u4e2a\u901a\u77e5\u5bf9\u8c61\uff0c\u4f46\u5728\u4eceCreateView\u521b\u5efa\u5bf9\u8c61\u65f6\u9047\u5230\u4e00\u4e9b\u56f0\u96be</p><pre><code>class ContributionAdd(CreateView):\n    model           =   Contribution\n    fields          = ['user', 'amount', 'zanaco_id']\n    template_name   =   'contribution_add.html'\n\n\n    def form_valid(self, form, *args, **kwargs):\n        activity_ct = ContentType.objects.get_for_model(\"????\")\n        Notification.objects.create(content_type=activity_ct, object_id=\"?????\",content_object=???,)\n        return super().form_valid(form)\n</code></pre><p>\u6211\u600e\u6837\u624d\u80fd\u5b8c\u6210\u4e0a\u8ff0\u4efb\u52a1\uff1f\n\u4ed6\u4eec\u7684\u65b9\u6cd5\u662f\u4f7f\u7528mixin\u5417</p></div>"}
{"href": "https://www.cnpython.com/qa/1473033", "title": "\u57fa\u4e8e\u65f6\u95f4\u5217\u8ba1\u7b97\u65e5\u671f\u5217\u4e2d\u7684\u503c", "content": "<div class=\"show-content\"><p>\u6211\u6709\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\u5e27\uff1a</p><pre><code>**date**              **time**            **price**\nNaN                      1103                   5  \nNaN                      0010                   10\nNaN                      0100                   6\nNaN                      0201                   8\nNaN                      0015                   7\n12.03.2020               0400                   4\nNaN                      0500                   6\nNaN                      0800                   3\nNaN                      1000                   4\nNaN                      1140                   5\n12.03.2020               1200                   2\nNaN                      0030                   1\nNaN                      0112                   0\n</code></pre><p>\u6211\u60f3\u901a\u8fc7\u8ba1\u7b97\u65f6\u95f4\u5b57\u6bb5\u4e2d\u7684\u65e5\u671f\u6765\u586b\u5145date\u5217\u4e2d\u7684NaN\u503c\u3002\u6211\u7684\u60f3\u6cd5\u662f\u5728date\u5217\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u503c\u3002\u4e00\u65e6\u6211\u6709\u4e86\u5b83\uff0c\u6211\u60f3\u4ee5\u8fd9\u6837\u4e00\u79cd\u65b9\u5f0f\u6765\u586b\u5145\uff08\uff09\u548cffill\uff08\uff09\uff0c\u5373\u5728\u5348\u591c\u524d\u540e\u7684\u65f6\u95f4\u6d4b\u91cf\u4e2d\u66f4\u6539\u65e5\u671f\u3002\u56e0\u6b64\uff0c\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5355\u5143\u683c\u4e2d\u7684bfill\uff08\uff09\u4e4b\u540e\u7684\u6570\u636e\u5982\u4e0b\u6240\u793a\uff1a</p><pre><code>     **date**              **time**            **price**\n    10.03.2020               1103                   5  \n    11.03.2020               0010                   10\n    11.03.2020               0100                   6\n    11.03.2020               0201                   8\n    12.03.2020               0015                   7\n    12.03.2020               0400                   4\n    NaN                      0500                   6\n    NaN                      0800                   3\n    NaN                      1000                   4\n    NaN                      1140                   5\n    12.03.2020               1200                   2\n    NaN                      0030                   1\n    NaN                      0112                   0\n</code></pre><p>\u8fd9\u662f\u5b83\u4ece\u7b2c\u4e00\u4e2a\u975e\u7a7a\u65e5\u671f\u503c\u5f00\u59cb\u5904\u7406ffil\uff08\uff09\u7684\u65b9\u5f0f\uff1a</p><pre><code>          **date**             **time**            **price**\n        10.03.2020               1103                   5  \n        11.03.2020               0010                   10\n        11.03.2020               0100                   6\n        11.03.2020               0201                   8\n        12.03.2020               0015                   7\n        12.03.2020               0400                   4\n        12.03.2020               0500                   6\n        12.03.2020               0800                   3\n        12.03.2020               1000                   4\n        12.03.2020               1140                   5\n        12.03.2020               1200                   2\n        13.03.2020               0030                   1\n        13.03.2020               0112                   0\n</code></pre><p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u503c\u53ef\u4ee5\u51fa\u73b0\u5728\u65e5\u671f\u5217\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002\u5e0c\u671b\u60a8\u80fd\u5e2e\u6211\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8c22\u8c22</p><pre><code>date = [NaN,NaN,NaN,NaN,NaN,\"12.03.2020\", NaN,NaN,NaN,NaN, \"12.03.2020\", NaN, NaN}\ntime = [1103,0010,0100,0201,0015,0400,0500,0800,1000,1140,1200,0030,0112]\nprice= [5,10,6,8,7,4,6,3,4,5,2,1,0]\n</code></pre><p><strong>\u7f16\u8f91</strong>\uff1a\u6dfb\u52a0\u5217\u8868</p></div>"}
{"href": "https://www.cnpython.com/qa/1473028", "title": "\u5982\u4f55\u4f7f\u7528Discord bot\u4ecechannel.history\u83b7\u53d6\u6d88\u606f\u5185\u5bb9\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u6709\uff08\u60f3\u8981\uff09\u6253\u5370\u6d88\u606f\u5386\u53f2\u8bb0\u5f55\u7684\u4ee3\u7801\uff0c\u4f46\u6211\u5f97\u5230\u7684\u4fe1\u606f\u3001ID\u7b49\u51e0\u4e4e\u6ca1\u6709\u7528\u5904</p><pre><code>&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;Member id=x name='Cheesebot' discriminator='1916' bot=True nick=None guild=&lt;Guild id=x name='NoLife Minecraft' shard_id=None chunked=False member_count=18&gt;&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;User id=x name='' discriminator='3912' bot=False&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;Member id=x name='Cheesebot' discriminator='1916' bot=True nick=None guild=&lt;Guild id=x name='NoLife Minecraft' shard_id=None chunked=False member_count=18&gt;&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;User id=x name='' discriminator='3912' bot=False&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;User id=x name='' discriminator='3912' bot=False&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;User id=x name='' discriminator='3912' bot=False&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;Member id=x name='Cheesebot' discriminator='1916' bot=True nick=None guild=&lt;Guild id=x name='NoLife Minecraft' shard_id=None chunked=False member_count=18&gt;&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;Member id=x name='Cheesebot' discriminator='1916' bot=True nick=None guild=&lt;Guild id=x name='NoLife Minecraft' shard_id=None chunked=False member_count=18&gt;&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;User id=x name='' discriminator='3912' bot=False&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n&lt;Message id=x channel=&lt;TextChannel id=x name='general' position=5 nsfw=False news=False category_id=x&gt; type=&lt;MessageType.default: 0&gt; author=&lt;Member id=x name='Cheesebot' discriminator='1916' bot=True nick=None guild=&lt;Guild id=x name='NoLife Minecraft' shard_id=None chunked=False member_count=18&gt;&gt; flags=&lt;MessageFlags value=0&gt;&gt;\n</code></pre><p>\u6211\u73b0\u5728\u638c\u63e1\u7684\u4ee3\u7801\u662f\uff1a</p><pre><code>  async def messagesl(sendc):\n    messages = await sendc.history(limit=10).flatten()\n    return messages\n</code></pre><p>\u6211\u9700\u8981\u7684\u662f\u4e00\u79cd\u83b7\u53d6\u6d88\u606f\u5185\u5bb9\u548c\u5176\u4ed6\u4fe1\u606f\uff08\u5982\u7528\u6237\u7b49\uff09\u7684\u65b9\u6cd5</p><p>\u654f\u611f\u4fe1\u606f\u662f\u4e00\u4e2ax\uff08\u6216\u8005\u5bf9\u4e8e\u540d\u79f0\uff0c\u6ca1\u6709\uff09</p></div>"}
{"href": "https://www.cnpython.com/qa/1473034", "title": "\u65e0\u6cd5\u5728Python 3\u4e2d\u4f7f\u7528amazonify\u3002ModuleNotFoundError:\u6ca1\u6709\u540d\u4e3a\u201curlparse\u201d\u7684\u6a21\u5757", "content": "<div class=\"show-content\"><p>\u6211\u7684\u4ee3\u7801\uff1a</p><pre><code>from amazonify import amazonify\nfrom urllib.parse import urlparse\n\nUser_url = input('Enter the link here: ')\n</code></pre><p>\u6211\u5f97\u5230\u7684\u9519\u8bef\u662f\uff1a</p><blockquote><p>File\n\"C:\\Users\\jashandeep\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\amazonify.py\",\nline 4, in <br>\nfrom urlparse import urlparse, urlunparse ModuleNotFoundError: No module named 'urlparse'</p></blockquote></div>"}
{"href": "https://www.cnpython.com/qa/1473032", "title": "Django 2.1.X:\uff08models.E026\uff09\u6a21\u578b\u4e0d\u80fd\u6709\u591a\u4e2a\u201cprimary_key=True\u201d\u5b57\u6bb5", "content": "<div class=\"show-content\"><p>\u6211\u76ee\u524d\u6b63\u5728\u5c06\u65e7\u7248Django\u5e94\u7528\u7a0b\u5e8f\u4ece\u7248\u672c<strong>1.11</strong>\u5347\u7ea7\u5230<strong>3.2</strong></p><p>\u4e3a\u4e86\u6700\u5c0f\u5316\u98ce\u9669\uff0c\u6211\u4e00\u6b21\u53ea\u5347\u7ea7\u4e00\u4e2a\u6b21\u8981\u7248\u672c\u3002\u8fd9\u610f\u5473\u7740\uff1a1.11--&amp;gt\uff1b2.0--&amp;gt\uff1b2.1\u7b49</p><p>\u4ece\u7248\u672c<strong>2.0.13</strong>\u5347\u7ea7\u5230<strong>2.1.15</strong>\u65f6\uff0c\u6211\u5728\u5c1d\u8bd5\u6253\u5f00Django shell\u65f6\u9047\u5230\u4ee5\u4e0b\u9519\u8bef\uff1a</p><pre><code>python manage.py shell_plus\nSystemCheckError: System check identified some issues:\n   \nERRORS:\nmyapp.DemoModel: (models.E026) The model cannot have more than one field with 'primary_key=True'.\n</code></pre><p>\u8fd9\u662f\u6211\u7684\u6a21\u578b\uff1a</p><pre><code>class DemoModel(models.Model):\n    field_a = models.OneToOneField(ModelA, models.DO_NOTHING, primary_key=True)\n    field_b = models.OneToOneField(ModelB, models.DO_NOTHING, primary_key=True)\n    creation_time = models.DateTimeField(auto_now=True)\n\n    class Meta:\n        managed = False\n        db_table = 'demo_model'\n        unique_together = (('field_a', 'field_b'),)\n</code></pre><p>\u6211\u600e\u6837\u624d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898<strong>Django shell\u5df2\u4e0eDjango 2.1\u4e4b\u524d\u7684\u6240\u6709\u7248\u672c\u914d\u5408\u4f7f\u7528\u3002</strong></p><p>\u63d0\u524d\u8c22\u8c22</p><p>\u4eb2\u5207\u95ee\u5019,</p></div>"}
{"href": "https://www.cnpython.com/qa/1473031", "title": "\u670d\u52a1\u5668\u4fe1\u606f\u547d\u4ee4discord.py", "content": "<div class=\"show-content\"><p>\u6211\u5728discord.py\u4e2d\u7684\u670d\u52a1\u5668\u4fe1\u606f\u547d\u4ee4\u6709\u4e00\u4e9b\u95ee\u9898\u3002\u5bf9\u4e8e<code>premium_tier</code>\uff08Boost\uff09<code>if</code>\u8c03\u7528\uff0c\u6211\u5f97\u5230\u4e86<code>Undefined variable 'premium_tier'</code>\u3002\u6211\u76f8\u4fe1\u6211\u5f97\u5230\u4e86\u4e00\u4e2a\u9519\u8bef\u7684\u7f29\u7565\u56fe\uff0c\u867d\u7136\u6211\u6ca1\u6709\u770b\u5230\u5b83</p><p>\u4ee3\u7801\uff1a</p><pre><code>@bot.command()\nasync def server(ctx, *, server: discord.Guild = None):\n    embedVar = discord.Embed(color=0xfaa61a)\n    date_format = \"%a, %d %b %Y %I:%M %p\"\n    embedVar.add_field(name=\"Created at:\", value=server.created_at.strftime(date_format))\n    embedVar.add_field(name=\"Humans\", value=sum(not member.bot for member in ctx.guild.members))\n    embedVar.add_field(name=\"Bots\", value=sum(member.bot for member in ctx.guild.members))\n\n    if premium_tier == \"0\":\n        embedVar.add_field(name=\"Boost Level\", value='None')\n    if premium_tier == \"1\":\n        embedVar.add_field(name=\"Boost Level\", value='1')\n    if premium_tier == \"2\":\n        embedVar.add_field(name=\"Boost Level\", value='2')\n    if premium_tier == \"3\":\n        embedVar.add_field(name=\"Boost Level\", value='3')\n    \n    embedVar.add_field(name=\"Owner\", value=server.owner)\n    embedVar.set_thumbnail(url=server.icon_url)\n    return await ctx.send(embed=embedVar)\n</code></pre></div>"}
{"href": "https://www.cnpython.com/qa/1473030", "title": "\u5982\u4f55\u68c0\u67e5\u53d8\u91cf\u662ffloat\u8fd8\u662fint\uff1f", "content": "<div class=\"show-content\"><p>\u5f53\u6211\u5728Car\u7c7b\u4e2d\u6784\u9020\u4e00\u4e2a<code>__init__()</code>\u65f6\uff0c\u6bd4\u5982\u8bf4\uff0c\u6211\u60f3\u68c0\u67e5\u53d8\u91cf<code>make</code>\u548c<code>current_gas</code>\u5206\u522b\u662fstring\u548cfloat\u6216integer\uff08\u975e\u8d1f\uff09</p><p>\u90a3\u4e48\uff0c\u5982\u4f55\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u63d0\u51fa\u9002\u5f53\u7684\u9519\u8bef\u5462</p><p>\u6211\u8bd5\u8fc7\u4e86</p><pre><code>class Car:\n    def __init__(self,make,current_gas):\n        if type(make) != str:\n            raise TypeError(\"Make should be a string\")\n        if not type(current_gas) == float or type(current_gas) == int:\n            raise TypeError(\"gas amount should be float or int\")\n        if current_gas &lt;=0:\n            raise ValueError(\"gas amount should not be negative\")\n</code></pre><p>\u4f46\u662f\uff0c\u8be5<code>__init__()</code>\u5de5\u4f5c\u4e0d\u6b63\u5e38\u3002\u6211\u600e\u4e48\u4fee\u7406\u5b83</p></div>"}
{"href": "https://www.cnpython.com/qa/1473029", "title": "\u901a\u8fc7\u4fdd\u6301\u5206\u7ec4\uff0c\u67e5\u627edataframe\u5217\u4e2d\u7684\u524dn\u4e2a\u5143\u7d20", "content": "<div class=\"show-content\"><p>\u6211\u8bd5\u56fe\u627e\u5230\u5217<code>total_petitions</code>\u7684\u524d5\u4e2a\u5143\u7d20\uff0c\u4f46\u4fdd\u6301\u4e86\u6211\u6240\u505a\u7684\u6709\u5e8f\u5206\u7ec4</p><pre><code>df = df[['fy', 'EmployerState', 'total_petitions']]\ntable = df.groupby(['fy','EmployerState']).mean()\ntable.nlargest(5, 'total_petitions')\n</code></pre><p>\u6837\u672c\u8f93\u51fa\uff1a</p><pre><code>        \nfy  EmployerState   total_petitions\n2020    WA           7039.333333\n2016    MD           2647.400000\n2017    MD           2313.142857\n...     TX           2305.541667\n2020    TX           2081.952381\n</code></pre><p>\u671f\u671b\u8f93\u51fa\uff1a</p><pre><code>\nfy  EmployerState total_petitions   \n2016    AL  3.875000\n        AR  225.333333\n        AZ  26.666667\n        CA  326.056604\n        CO  21.333333\n... ... ...\n2020    VA  36.714286\n        WA  7039.333333\n        WI  43.750000\n        WV  8986086.08\n        WY  1.000000\n</code></pre><p>\u5176\u4e2d<code>total_petitions</code>\u662f5\u4e2a\u5e74\u5e73\u5747\u6536\u5165\u6700\u9ad8\u7684\u5dde</p></div>"}
{"href": "https://www.cnpython.com/qa/1473026", "title": "\u5728Tkinter\u4e2d\u8f93\u5165\u952e\u7ed1\u5b9a", "content": "<div class=\"show-content\"><p>\u6240\u4ee5\uff0c\u6211\u4e00\u76f4\u5728\u5c1d\u8bd5\u7ed1\u5b9aenter\u952e\u6765\u6309\u4e0b\u8fd9\u4e2apython\u7a0b\u5e8f\u4e2d\u7684\u6309\u94ae\u2014\u2014\u662f\u7684\uff0c\u6211\u5df2\u7ecf\u770b\u5230\u4e86\u8bb8\u591a\u5176\u4ed6\u4e0e\u6b64\u76f8\u5173\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4ed6\u4eec\u7684\u4ee3\u7801\u90fd\u6ca1\u6709\u56e0\u4e3a\u4efb\u4f55\u539f\u56e0\u4e0e\u8fd9\u4e2a\u7a0b\u5e8f\u4e00\u8d77\u5de5\u4f5c\u3002\u5f20\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u662f\u5426\u6709\u4eba\u6709\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848</p><p>\u4e0b\u9762\u7684\u4ee3\u7801\u6309\u9884\u671f\u5b8c\u6210\u4e86\u6240\u6709\u64cd\u4f5c\u2014\u2014\u5b83\u5c06\u8c03\u51faGUI\uff0c\u663e\u793agoofy jar\u56fe\u7247\u3001\u6309\u94ae\u548c\u5e26\u6709\u9884\u586b\u5145\u6587\u672c\u7684\u8f93\u5165\u5b57\u6bb5\uff0c\u4f46\u952e\u76d8\u4e0a\u7684enter\u952e\u4e0d\u4f1a\u4ea7\u751f\u7ed3\u679c\uff0c\u56e0\u4e3a\u6211\u7528\u9f20\u6807\u6309\u4e0b\u6309\u94ae\u65f6\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5</p><pre><code>import tkinter as tk\nfrom PIL import Image, ImageTk, ImageTransform\nfrom tkinter.filedialog import askopenfile\n\nroot = tk.Tk()\n\n\nclass guiMenu:\n    def __init__(self, master):\n        myFrame = tk.Frame(master)\n\n        # logo\n\n        logo = Image.open('jar.jpg')\n        logo2 = logo.resize((200, 200), Image.ANTIALIAS)\n        logo2 = ImageTk.PhotoImage(logo2)\n        self.logo_label = tk.Label(image=logo2)\n        self.logo_label.image = logo2\n        self.logo_label.grid(column=1, row=0)\n\n        # instructions\n        self.instructions = tk.Label(master,\n                                     text=\"Input your email address and password to extract email attachments.\\n \"\n                                          \"You should also select the folder you wish the attachments to reach.\")\n        self.instructions.grid(columnspan=3, column=0, row=3)\n\n        # store the user login info in variables\n        def storeUserLogin():\n            clientEmailInput = self.emailEntry.get()\n            clientPasswordInput = self.passwordEntry.get()\n            print(clientEmailInput, clientPasswordInput)\n\n        # delete email prefill on click\n        def onEmailClick(event):\n            self.emailEntry.configure()\n            self.emailEntry.delete(0, 100)  # this deletes the preexisting text for email entry\n            self.emailEntry.unbind('&lt;Button-1&gt;', self.on_click_id)\n\n        # delete pw prefill on click\n        def onPWClick(event):\n            self.passwordEntry.configure()\n            self.passwordEntry.delete(0, 100)  # this deletes the preexisting text for email entry\n            self.passwordEntry.unbind('&lt;Button-1&gt;', self.on_click_id2)\n\n        # email entry box\n        self.emailEntry = tk.Entry(master, width=50)\n        # emailEntry = tk.StringVar(None)\n        # emailEntry.set(\"Email Address\")\n        self.emailEntry = tk.Entry()\n        self.emailEntry.insert(0, \"Email Address\")\n        self.emailEntry.configure()\n        self.emailEntry.grid(column=1, row=1)\n\n        # on-click function\n        self.on_click_id = self.emailEntry.bind('&lt;Button-1&gt;', onEmailClick)\n\n        # enter key function\n        def enterFunction(event=None):\n            master.bind('&lt;Return&gt;', lambda event=None, loginButton.invoke())\n\n        # password entry box\n\n        self.passwordEntry = tk.Entry()\n        self.passwordEntry.insert(0, \"Password\")\n        self.passwordEntry.grid(column=1, row=2)\n\n        # on click function\n        self.on_click_id2 = self.passwordEntry.bind('&lt;Button-1&gt;', onPWClick)\n\n        # button to login\n        def loginButton():\n            self.loginButtonText = tk.StringVar()\n            self.loginButton = tk.Button(master, textvariable=self.loginButtonText, font=\"Arial\",\n                                         commands=lambda: [storeUserLogin(), enterFunction()],\n                                         width=5, height=2,\n                                         bg=\"white\", fg=\"black\")\n            self.loginButtonText.set(\"LOGIN\")\n            self.loginButton.grid(column=1, row=4)\n\n        self.canvas = tk.Canvas(root, width=600, height=250)\n        self.canvas.grid(columnspan=3)\n\n\ng = guiMenu(root)\nroot.mainloop()\n</code></pre></div>"}
{"href": "https://www.cnpython.com/qa/1473035", "title": "\u5982\u4f55\u5728anaconda spyder 5\u4e0a\u5b89\u88c5\u201cutil\u201d", "content": "<div class=\"show-content\"><p>\u6211\u6b63\u5728\u5c1d\u8bd5\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a</p><pre><code>from util import  testDlibFaceDetector, saveFaces_hogFaceDetector\n\n# choose method to detect faces: HAAR Cascade or HOG algorithm\nif __name__ == '__main__':\n    # testFaceRecognitionAlgorithm() #HAAR Cascade\n    # testDlibFaceDetector() # HOG\n    # saveFaces()\n    saveFaces_hogFaceDetector()\n</code></pre><p>\u4f46\u6bcf\u6b21\u6211\u90fd\u4f1a\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\uff0c\u90a3\u5c31\u662f\uff1a</p><pre><code>runfile('E:/code pfe/liveness-master/4_liveness net/untitled0.py', wdir='E:/code pfe/liveness-master/4_liveness net')\nTraceback (most recent call last):\n\n  File \"E:\\code pfe\\liveness-master\\4_liveness net\\untitled0.py\", line 8, in &lt;module&gt;\n    import util\n\nModuleNotFoundError: No module named 'util'\n</code></pre><p>sp\u8bf7\u544a\u8bc9\u6211\u5982\u4f55\u6b63\u786e\u5b89\u88c5\u5b83\uff0c\u6211\u627e\u5230\u4e86git clone\u65b9\u6cd5\uff0c\u4f46\u6ca1\u6709\u53d1\u73b0\u5b83\u5bf9\u6211\u6709\u7528</p></div>"}
{"href": "https://www.cnpython.com/qa/1473027", "title": "EBS Docker\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684SIGPIPE\u5199\u5165\u95ed\u5408\u7ba1\u9053\u9519\u8bef", "content": "<div class=\"show-content\"><p>\u5728EBS vs\u672c\u5730\u8fd0\u884cdocker\u5bb9\u5668\u65f6\uff0c\u6211\u6709\u4e00\u4e2a\u65e0\u6cd5\u89e3\u91ca\u7684\u9519\u8bef\u3002\u5bb9\u5668\u8fd0\u884c\u88f8uWSGI\u8fdb\u7a0b\uff0c\u52a0\u8f7d\u8fd0\u884c\u957f\u65f6\u95f4\uff08\u8d85\u8fc75\u79d2\uff09\u8bf7\u6c42\u7684\u5e94\u7528\u7a0b\u5e8f\u3002docker\u5bb9\u5668\u5728\u672c\u5730\u8fd0\u884c\u826f\u597d\uff1b\u5f53\u901a\u8fc7ssh on the box\u8fd0\u884c\u65f6\uff0c\u6574\u4e2a\u4ee3\u7801\u8def\u5f84\u5728EBS\u4e3b\u673a\u4e0a\u8fd0\u884c\u826f\u597d\uff08\u901a\u8fc7\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u5411entry\u51fd\u6570\u63d0\u4ea4\u8bf7\u6c42\uff0c\u8be5\u51fd\u6570\u6a21\u62df\u6765\u81ea\u5ba2\u6237\u7aef\u7684POST\u53c2\u6570\uff09\u3002\u4f46\u5f53\u901a\u8fc7API\u8def\u7531\u901a\u8fc7http\u8c03\u7528\u4ee3\u7801\u8def\u5f84\u65f6\uff0c\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a</p><pre><code>Fri May  7 03:01:40 2021 - SIGPIPE: writing to a closed pipe/socket/fd (probably the client disconnected) on request /preview-map (ip 172.17.0.1) !!!\n2021-05-07 03:01:40] log_exception 1761 - Exception on /preview-map [POST]\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.7/site-packages/flask/app.py\", line 2292, in wsgi_app\n    response = self.full_dispatch_request()\n   ...\n  File \"./scene.py\", line 135, in scenePreview\n    quality=10)  # quality=1 =&gt; no shadow/reflection, quality=10 is 'normal'\n  File \"/usr/local/lib/python3.7/site-packages/vapory/vapory.py\", line 102, in render\n    quality, antialiasing, remove_temp)\n  File \"/usr/local/lib/python3.7/site-packages/vapory/io.py\", line 114, in render_povstring\n    raise IOError(\"POVRay rendering failed with the following error: \"+err)\nTypeError: can only concatenate str (not \"bytes\") to str\n</code></pre><p>\u6211\u8c03\u8bd5\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u5047\u8bbe\u9519\u8bef\u4e0e\u5806\u6808\u8ddf\u8e2a\u6709\u5173\uff1aPOVRay\uff08vapory\u5e93\u7528Python\u62bd\u8c61\u76843D\u573a\u666f\u6e32\u67d3\u5f15\u64ce\uff09\uff0c\u4f46\u6211\u53ef\u4ee5\u5728EBS docker\u5bb9\u5668\u4e0a\u8fd0\u884cPOVRay\u51fd\u6570\uff0c\u6ca1\u6709\u95ee\u9898</p><p>EBS\u4e2d\u7684uWSGI\u8fdb\u7a0b\u662f\u5426\u53ef\u80fd\u57283\u79d2\u540e\u5173\u95ed\u8fde\u63a5\uff0c\u800c\u4ee3\u7801\u4e2d\u7684\u6b64\u4e2d\u65ad\u53ea\u662f\u4e00\u4e2a\u5171\u540c\u4e8b\u4ef6\uff1f\u8fd9\u662fdocker\uff0c\u6240\u4ee5\u6211\u7684\u672c\u5730\u73af\u5883\u548c\u8fdc\u7a0b\u73af\u5883\u4e4b\u95f4\u771f\u7684\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u9664\u4e86EBS\u5728\u8fc7\u65e9\u5173\u95ed\u8fde\u63a5\u65f6\u6240\u505a\u7684\u4e8b\u60c5</p><p>\u6211\u88ab\u96be\u4f4f\u4e86\u3002\u4f60\u77e5\u9053\u5982\u4f55\u8fdb\u4e00\u6b65\u8c03\u8bd5\u5417</p></div>"}
{"href": "https://www.cnpython.com/qa/1473036", "title": "\u5982\u4f55\u5728Python\u4e2d\u8ba1\u7b97\u54c8\u5bc6\u987f\u91cf\uff08\u91cf\u5b50\u529b\u5b66\uff09", "content": "<div class=\"show-content\"><p>\u6211\u5728\u505a\u8fd9\u4e2a\u9879\u76ee\uff0c\u6211\u7684\u4efb\u52a1\u662f\u5bf9\u5404\u79cd\u52bf\u7684\u80fd\u5e26\u7ed3\u6784\u8fdb\u884c\u5efa\u6a21\uff0c\u6211\u5728\u7eb8\u4e0a\u5b8c\u6210\u4e86\u6240\u6709\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5e76\u6210\u529f\u5730\u5bf9\u4e00\u4e9b\u7ed3\u679c\u8fdb\u884c\u4e86\u786c\u7f16\u7801\uff0c\u4f46\u6211\u5e0c\u671b\u80fd\u591f\u4ece\u5934\u5f00\u59cb\u4ea7\u751f\u7ed3\u679c\uff0c\u53ea\u63d0\u4f9b\u7279\u5f81\u5411\u91cf\u3001\u54c8\u5bc6\u987f\u91cf\u548c\u6b63\u5728\u63a2\u7d22\u7684\u52bf\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u6211\u5728\u7528Python</p><p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u80fd\u591f\u8868\u793a\u54c8\u5bc6\u987f\u91cf\u7684\u5206\u91cf\uff0c\u5b83\u4eec\u53ea\u4f9d\u8d56\u4e8e\uff08-h_bar^2/2m\uff09<em>\uff08d^2/dx^2\uff09\u3002\u6211\u7528Numpy\u628a\u6211\u7684bra\u8868\u793a\u6210\u6570\u7ec4\uff0c\u7136\u540e\u7528Numpy\u7684\u5185\u79ef\u51fd\u6570\u6765\u8ba1\u7b97\u54c8\u5bc6\u987f\u91cf\u7684\u5206\u91cf\uff0c\u8fd9\u4e9b\u5206\u91cf\u53ea\u4f9d\u8d56\u4e8e\u4e8c\u9636\u5bfc\u6570\u548c\u5b83\u5404\u81ea\u7684\u5e38\u6570\u3002\u5f53\u6211\u5c1d\u8bd5\u8bc4\u4f30\u54c8\u5bc6\u987f\u91cf\u4e2d\u4e0e\u52bf\u76f8\u5173\u7684\u5206\u91cf\u65f6\uff0c\u4f1a\u51fa\u73b0\u95ee\u9898\uff08\u770b\u5230\u5b8c\u6574\u7684\u54c8\u5bc6\u987f\u7b97\u7b26\u662f\uff08-h_bar^2/2m\uff09</em>\uff08d^2/dx^2\uff09+V\uff08x\uff09\uff09</p><p>\u6211\u4e0d\u592a\u786e\u5b9a\u5982\u4f55\u5b8c\u6210\u8fd9\u90e8\u5206\u3002\u6211\u66fe\u5c1d\u8bd5\u4f7f\u7528SciPy\u4ee5\u79ef\u5206\u5f62\u5f0f\u8ba1\u7b97\u5185\u79ef\uff0c\u4f46\u5728\u5c1d\u8bd5\u8ba1\u7b97\u8fd9\u4e9b\u5177\u6709\u590d\u6742\u7ec4\u4ef6\u7684\u79ef\u5206\u65f6\uff0c\u6211\u4e00\u76f4\u9047\u5230\u95ee\u9898\uff08SciPy\u4e0d\u559c\u6b22\u8fd9\u6837\uff09</p><p>\u4e3a\u4e86\u66f4\u786e\u5207\u5730\u4e86\u89e3\u6211\u5728\u505a\u4ec0\u4e48\uff0c\u8fd9\u91cc\u662f\u6211\u6b63\u5728\u4f7f\u7528\u7684PDF\uff1a<a href=\"https://era.library.ualberta.ca/items/4835014b-1dbc-48e1-bbec-c175c87c9b03/view/000b36c4-55ba-471b-aaf8-d9d1c5f5ee06/Pavelich_Robert_L_201609_MSc.pdf\" rel=\"nofollow noreferrer\">https://era.library.ualberta.ca/items/4835014b-1dbc-48e1-bbec-c175c87c9b03/view/000b36c4-55ba-471b-aaf8-d9d1c5f5ee06/Pavelich_Robert_L_201609_MSc.pdf</a>\uff08\u5b9e\u9645\u6587\u6863\u4e2d\u7684\u7b2c19-22\u9875\uff09</p><p>\u4efb\u4f55\u5e2e\u52a9\u90fd\u5c06\u4e0d\u80dc\u611f\u6fc0\uff0c\u6211\u5bf9\u6574\u4e2a\u91cf\u5b50\u529b\u5b66\u76f8\u5f53\u964c\u751f\uff0c\u751a\u81f3\u5728\u5efa\u6a21\u65b9\u9762\u66f4\u4e3a\u73af\u4fdd\u3002\u975e\u5e38\u611f\u8c22</p></div>"}
{"href": "https://www.cnpython.com/qa/1473037", "title": "Python\u5728\u201c\u76d1\u89c6\u5668\u201d\u800c\u4e0d\u662f\u201c\u5c4f\u5e55\u201d\u6216\u201c\u684c\u9762\u201d\u4e0a\u5c45\u4e2d\u663e\u793a\u7a97\u53e3", "content": "<div class=\"show-content\"><p>\u5173\u4e8e\u5982\u4f55\u5c06python tkinter\u7a97\u53e3\u96c6\u4e2d\u5728\u5c4f\u5e55\u4e0a\uff0c\u6709\u5f88\u591a\u95ee\u9898\uff0c\u7b54\u6848\u5f88\u597d\u3002\u6211\u7684\u95ee\u9898\u662f\u6211\u6240\u8c13\u7684\u201c\u5c4f\u5e55\u201d\u662f\u8fd9\u6837\u7684\uff1a</p><p><a href=\"https://i.stack.imgur.com/eQWWr.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/eQWWr.png\" alt=\"mmm multiple monitors.png\"></a></p><p>\u867d\u7136\u4f60\u53ef\u4ee5\u5c06\u7a97\u53e3\u90e8\u5206\uff08\u6216\u5168\u90e8\uff09\u79fb\u52a8\u5230\u7070\u8272\u533a\u57df\uff0c\u4f46\u5b83\u4eec\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u51fa\u73b0\u5728\u6211\u7684\u4e09\u4e2a\u663e\u793a\u5668\u4e0a\u3002\u5de6\u4e0a\u89d2\u663e\u793a\u5668\u4e3a1920x1080\uff0c\u53f3\u4e0a\u89d2\u663e\u793a\u5668\u4e3a3840x2160\uff0c\u53f3\u4e0b\u89d2\u663e\u793a\u5668\u4e3a1920x1080</p><p>\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u663e\u793a\u5668\u4e0a\u7684\u684c\u9762\u56fe\u6807\u6216\u4efb\u4f55\u663e\u793a\u5668\u4e0a\u7684<code>gnome-terminal</code>\u542f\u52a8\u3002\u5982\u4f55\u53d1\u73b0\uff1a</p><ul><li>\u8c03\u7528python\u65f6\u54ea\u4e2a\u76d1\u89c6\u5668\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u674e&gt;</li><li>\u5c4f\u5e55\u623f\u5730\u4ea7\u5185\u6d3b\u52a8\u76d1\u89c6\u5668\u7684\u5750\u6807\u674e&gt;</li></ul><p>\u867d\u7136\u6211\u4f7f\u7528\u7684\u662fGnome\u684c\u9762\uff0c\u4f46\u6211\u5e0c\u671b\u4f7f\u7528X11\u6216Wayland\u652f\u6301\u6240\u6709Linux\u98ce\u683c\u3002\u6b64\u5916\uff0c\u6211\u6700\u8fd1\u8bd5\u7528\u4e86ChromeOS Linux\u6d4b\u8bd5\u7248\uff0c\u5bf9\u5b83\u7684\u652f\u6301\u4e5f\u4f1a\u5f88\u597d\u3002\u6b64\u5916\uff0c\u975e\u5e38\u9700\u8981\u5bf9Windows\u548cOSX\u7684\u652f\u6301</p><p>\u6211\u5df2\u7ecf\u5b89\u88c5\u5e76\u4f7f\u7528\u4e86\u8bb8\u591a\u5de5\u5177<code>gi</code>\u3001<code>wnck</code>\u3001<code>xdotool</code>\u3001<code>wmctrl</code>\uff0c\u8fd9\u4e9b\u5de5\u5177\u628a\u6211\u903c\u5230\u4e86\u5899\u89d2\u3002\u6211\u5e0c\u671b\u5b83\u4eec\u662f\u4e00\u4e2a\u6d41\u884c\u7684python\u5e93\uff08\u6700\u597d\u901a\u8fc7<code>apt-get</code>\u5b89\u88c5\uff0c\u800c\u4e0d\u662f<code>pip</code>\u6216<code>pip3</code>\uff09\uff0c\u53ef\u4ee5\u5411python\u516c\u5f00\u201c\u5c4f\u5e55\u201d\u3001\u201c\u684c\u9762\u201d\u548c\u201c\u76d1\u89c6\u5668\u201d</p></div>"}
{"href": "https://www.cnpython.com/qa/1473038", "title": "\u4f7f\u7528python\u5c06\u6570\u5b57\u91cf\u8f6c\u6362\u4e3a\u5370\u5ea6\u6587\u5b57\u683c\u5f0f", "content": "<div class=\"show-content\"><p>\u7531\u4e8e\u6709\u4e00\u4e2a\u5bf9\u5355\u8bcd\u6709\u6570\u503c\u7684\u5217\uff0c\u6211\u5c1d\u8bd5\u4f7f\u7528<code>num2words</code>\uff0c\u4f46\u5b83\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u6309\u7167\u5370\u5ea6\u6807\u51c6\u683c\u5f0f\u6267\u884c</p><p>\u56e0\u4e3a\u6211\u60f3\u7528\u514b\u7f57\u5c14\u3001\u62c9\u514b\u65af\u3001\u6570\u767e\u7b49\u6765\u8868\u793a\u8fd9\u4e9b\u8bcd</p><pre><code>For Eg.\n\n10000000 - One Crore\n100000   - One Lakhs\n1000     - One Thousands\n</code></pre><p><strong>\u8f93\u5165\u6570\u636e</strong></p><pre><code>Total_value\n\n253897\n587619.10\n15786\n354783.36\n</code></pre><p><strong>\u9884\u671f\u4ea7\u51fa</strong></p><pre><code>            Value_words\n\nTwo Lakhs Fifty Three Thousand Eight Hundred Ninty Seven Rupees\nFive Lakhs Eighty Seven Thousand Six Hundred Ninteen Rupees Ten Paise\nFifteen Thousand Seven Hundred Eighty Six Rupees\nThree Lakhs Fifty Four Thousand Seven Hundred Eighty Three Rupees Thirty Six Paise\n</code></pre><p><strong>\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4e00\u76f4\u5728\u4f7f\u7528\u7684\u811a\u672c\uff1a</strong></p><pre><code>import decimal    \n\ndef num2words(num):\n    num = decimal.Decimal(num)\n    decimal_part = num - int(num)\n    num = int(num)\n\n    if decimal_part:\n        return num2words(num) + \" point \" + (\" \".join(num2words(i) for i in str(decimal_part)[2:]))\n\n    under_20 = ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen']\n    tens = ['Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety']\n    above_100 = {100: 'Hundred', 1000: 'Thousand', 100000: 'Lakhs', 10000000: 'Crores'}\n\n    if num &lt; 20:\n        return under_20[num]\n\n    if num &lt; 100:\n        return tens[num // 10 - 2] + ('' if num % 10 == 0 else ' ' + under_20[num % 10])\n\n    # find the appropriate pivot - 'Million' in 3,603,550, or 'Thousand' in 603,550\n    pivot = max([key for key in above_100.keys() if key &lt;= num])\n\n    return num2words(num // pivot) + ' ' + above_100[pivot] + ('' if num % pivot==0 else ' ' + num2words(num % pivot))\n\ndf['Value_words'] = num2words(decimal.Decimal(df['Total_value']))\n</code></pre><p>\u5f53\u5c1d\u8bd5\u4f7f\u7528\u9759\u6001\u503c\u65f6\uff0c\u5b83\u5de5\u4f5c\u6b63\u5e38\uff0c\u4f46\u8f93\u51fa\u683c\u5f0f\u4e0d\u662f\u9884\u671f\u7684\u6b63\u786e\u683c\u5f0f</p><p>\u8bf7\u5efa\u8bae</p></div>"}
{"href": "https://www.cnpython.com/qa/1473039", "title": "\u4e0d\u534f\u8c03py 3.7 SSL\u7684Rapperry pi lite\u4e0a\u51fa\u73b0SSL\u9519\u8bef\uff1a\u9ed8\u8ba4[\u7f51\u7edc\u65e0\u6cd5\u8bbf\u95ee]", "content": "<div class=\"show-content\"><p>\u603b\u7ed3\u6240\u6709\u91cd\u8981\u7684\u4e8b\u60c5\uff1a</p><p>\u6211\u5728\u65e7\u7684raspberry pi\u6a21\u578bB\u4e0a\u8bbe\u7f6e\u4e86raspberry py lite</p><p>\u6211\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u9759\u6001ip over etc/dhcpcd.conf</p><p>\u6211\u77e5\u9053\uff0c\u81ea\u4ece\u6211\u4e0b\u8f7d\u4e86pip3\u4e4b\u540e\uff0c\u5b83\u5c31\u5df2\u7ecf\u8fde\u63a5\u5230\u4e86\u4e92\u8054\u7f51\uff0c\u5728\u8bbe\u7f6e\u4e86ip\u4e4b\u540e\uff0c\u5b83\u8fd8\u8fde\u63a5\u4e86\u4e00\u4e9bpython\u6a21\u5757\u3002\n\uff08\u6211\u4f7f\u7528python3.7\uff09</p><p>\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u5c0f\u578bdiscord bot\uff0c\u5e76\u5c1d\u8bd5\u5728PuTTY\u4e0a\u4ece\u684c\u9762\u6267\u884c\u811a\u672c\uff0c\u4f46\u5f53\u6211\u5c1d\u8bd5\u65f6\uff0c\u6211\u6536\u5230\u4ee5\u4e0b\u9519\u8bef\u6d88\u606f\uff1a</p><pre><code>Traceback (most recent call last):\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 969, in _wrap_create_connection\n    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 959, in create_connection\n    raise exceptions[0]\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 946, in create_connection\n    await self.sock_connect(sock, address)\n  File \"/usr/lib/python3.7/asyncio/selector_events.py\", line 464, in sock_connect\n    return await fut\n  File \"/usr/lib/python3.7/asyncio/selector_events.py\", line 469, in _sock_connect\n    sock.connect(address)\nOSError: [Errno 101] Network is unreachable\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"main.py\", line 25, in &lt;module&gt;\n    bot.run(token)\n  File \"/home/pi/.local/lib/python3.7/site-packages/discord/client.py\", line 723, in run\n    return future.result()\n  File \"/home/pi/.local/lib/python3.7/site-packages/discord/client.py\", line 702, in runner\n    await self.start(*args, **kwargs)\n  File \"/home/pi/.local/lib/python3.7/site-packages/discord/client.py\", line 665, in start\n    await self.login(*args, bot=bot)\n  File \"/home/pi/.local/lib/python3.7/site-packages/discord/client.py\", line 511, in login\n    await self.http.static_login(token.strip(), bot=bot)\n  File \"/home/pi/.local/lib/python3.7/site-packages/discord/http.py\", line 300, in static_login\n    data = await self.request(Route('GET', '/users/@me'))\n  File \"/home/pi/.local/lib/python3.7/site-packages/discord/http.py\", line 192, in request\n    async with self.__session.request(method, url, **kwargs) as r:\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/client.py\", line 1117, in __aenter__\n    self._resp = await self._coro\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/client.py\", line 521, in _request\n    req, traces=traces, timeout=real_timeout\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 535, in connect\n    proto = await self._create_connection(req, traces, timeout)\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 892, in _create_connection\n    _, proto = await self._create_direct_connection(req, traces, timeout)\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 1051, in _create_direct_connection\n    raise last_exc\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 1032, in _create_direct_connection\n    client_error=client_error,\n  File \"/home/pi/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 975, in _wrap_create_connection\n    raise client_error(req.connection_key, exc) from exc\naiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discord.com:443 ssl:default [Network is unreachable]\n\n</code></pre></div>"}
{"href": "https://www.cnpython.com/qa/1473003", "title": "\u201cPhotoImage Error\u201d\u5bf9\u8c61\u5728\u4e0e\u7c7b\u548c\u5bf9\u8c61\u4e00\u8d77\u4f7f\u7528\u65f6\u6ca1\u6709\u5c5e\u6027PhotoImage Error", "content": "<div class=\"show-content\"><p>\u6211\u6b63\u5728\u4f7f\u7528OOPs\u6982\u5ff5\u5728python\u4e2d\u5f00\u53d1\u540d\u4e3a<strong>\u989c\u8272\u68c0\u6d4b\u7684\u9879\u76ee\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u7528\u6237\u5fc5\u987b\u901a\u8fc7\u4ece\u7cfb\u7edf\u4e2d\u9009\u62e9\u56fe\u50cf\u6216\u4ece\u7f51\u7edc\u6444\u50cf\u673a\u4e2d\u62cd\u7167\u6765\u8f93\u5165\u56fe\u50cf\u3002\n\u6211\u51e0\u4e4e\u5b8c\u6210\u4e86\u9879\u76ee\uff0c\u4f46\u51fa\u73b0\u4e86\u8fd0\u884c\u65f6\u9519\u8bef\u3002\n\u4ee5\u4e0b\u662f\u6211\u7684\u4ee3\u7801\u5757\uff1a</strong></p><pre><code>self.root = Tk()\n....\n....\nself.capture_frame = Frame(self.root, width=750, height=550, bg='black')\n....\n....\n\ndef openCamera(self,capture_frame):\n    self.hide_all_frames()\n    self.capture_frame.pack()\n    \n    #button\n    snapshot_btn = Button(capture_frame,text=\"CAPTURE\",width=13, bg = '#1cbab5',\n                          fg = 'black',font = ('dsrom 10',12,'bold'),command = self.snapshot).place(x=170,y=515)\n    \n    BACK_btn = Button(capture_frame,text=\"BACK\",width=13, bg = 'red',\n                      fg = 'black',font = ('dsrom 10',12,'bold'),\n                      command = lambda :self.firstFrame(self.image_selection_frame)).place(x=400,y=515)\n    \n    #Labels\n    self.cam_area = Label(capture_frame, bg = 'black')\n    self.cam_area.place(x=50,y=20)  \n    \n    self.cap = cv.VideoCapture(0)\n    \n    #while to open camra \n    while True:\n        self.img = self.cap.read()[1]\n        self.img = cv.flip(self.img,1)\n        self.img1 = cv.cvtColor(self.img,cv.COLOR_BGR2RGB)\n        self.img = ImageTk.PhotoImage(image = PIL.Image.fromarray(self.img1))\n        self.cam_area['image'] = self.img\n        self.root.update()\n\n    self.cap.release()\n    cv.destroyAllWindows()\n</code></pre><p>\u5f53\u5355\u72ec\u8fd0\u884c\u800c\u4e0d\u521b\u5efa\u4efb\u4f55\u51fd\u6570\u6216\u65b9\u6cd5\u65f6\uff0c\u6b64\u4ee3\u7801\u5de5\u4f5c\u6b63\u5e38\u3002\n\u5f53\u6211\u5c1d\u8bd5\u5c06\u5b83\u5305\u542b\u5728\u6211\u7684\u9879\u76ee\u4e2d\u65f6\uff0c\u5b83\u8fd0\u884c\u826f\u597d\uff0c\u751a\u81f3\u53ef\u4ee5\u6355\u83b7\u56fe\u50cf\u5e76\u4fdd\u5b58\u5728\u7cfb\u7edf\u4e2d\u3002\n\u4f46\u5f53\u6211\u60f3\u5173\u95edcamra\u5e76\u5c1d\u8bd5\u91cd\u65b0\u6253\u5f00\u5b83\u65f6\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u9519\u8bef\uff1a</p><pre><code>[ WARN:0] global /tmp/pip-req-build-j6tkfxml/opencv/modules/videoio/src/cap_v4l.cpp (893) open VIDEOIO(V4L2:/dev/video0): can't open camera by index\nException in Tkinter callback\n\nTraceback (most recent call last):\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 1892, in __call__\nreturn self.func(*args)\nFile \"/home/safehouse/Desktop/ColorDetection.py\", line 145, in &lt;lambda&gt;\nfont = ('dsrom 10',10,'bold'),command=lambda \n:self.capturecmd(self.capture_frame)).place(x=450,y=130)\nFile \"/home/safehouse/Desktop/ColorDetection.py\", line 205, in capturecmd\nself.img1 = cv.cvtColor(self.img,cv.COLOR_BGR2RGB)\ncv2.error: OpenCV(4.5.1) /tmp/pip-req-build-j6tkfxml/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'\n</code></pre><p><strong>\u5f53\u6211\u62cd\u6444\u5e76\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\u800c\u4e0d\u91cd\u65b0\u542f\u52a8\u76f8\u673a\u65f6\uff0c\u6211\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef</strong></p><pre><code>Exception in Tkinter callback\nTraceback (most recent call last):\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 1892, in __call__\n  return self.func(*args)\nFile \"/home/safehouse/Desktop/ColorDetection.py\", line 145, in &lt;lambda&gt;\n  font = ('dsrom 10',10,'bold'),command=lambda \n:self.capturecmd(self.capture_frame)).place(x=450,y=130)\nFile \"/home/safehouse/Desktop/ColorDetection.py\", line 206, in capturecmd\n   self.img = ImageTk.PhotoImage(master = self.cam_area,image = Image.fromarray(self.img1))\nFile \"/usr/lib/python3/dist-packages/PIL/ImageTk.py\", line 112, in \n__init__\n   self.__photo = tkinter.PhotoImage(**kw)\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 4064, in __init__\n   Image.__init__(self, 'photo', name, cnf, master, **kw)\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 4009, in __init__\n   self.tk.call(('image', 'create', imgtype, name,) + options)\n_   tkinter.TclError: can't invoke \"image\" command: application has been destroyed\nException ignored in: &lt;function PhotoImage.__del__ at 0x7f866f265ca0&gt;\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/PIL/ImageTk.py\", line 118, in __del__\n   name = self.__photo.name\nAttributeError: 'PhotoImage' object has no attribute '_PhotoImage__photo'\n</code></pre><p><strong>\u5f53\u6211\u4f7f\u7528root=tk\uff08\uff09\u65f6\uff0c\u6211\u5f97\u5230Photoimage\uff08\uff09\u5c5e\u6027\u9519\u8bef\uff0c\u4f46\u5f53\u6211\u4f7f\u7528</strong></p><pre><code>root = Toplevel()\n</code></pre><p><strong>\u6211\u6d88\u9664\u4e86\u4e0a\u9762\u7684photoimage\u9519\u8bef\uff0c\u4f46\u540e\u6765\u53c8\u51fa\u73b0\u4e86\u65b0\u9519\u8bef\uff1a</strong></p><pre><code>Exception in Tkinter callback\nTraceback (most recent call last):\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 1892, in __call__\n  return self.func(*args)\nFile \"/home/safehouse/Desktop/ColorDetection.py\", line 145, in &lt;lambda&gt;\n  font = ('dsrom 10',10,'bold'),command=lambda :self.capturecmd(self.capture_frame)).place(x=450,y=130)\nFile \"/home/safehouse/Desktop/ColorDetection.py\", line 207, in capturecmd\n  self.cam_area['image'] = self.img\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 1657, in __setitem__\n  self.configure({key: value})\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 1646, in configure\n  return self._configure('configure', cnf, kw)\nFile \"/usr/lib/python3.9/tkinter/__init__.py\", line 1636, in _configure\n  self.tk.call(_flatten((self._w, cmd)) + self._options(cnf))\n_tkinter.TclError: invalid command name \".!toplevel.!frame3.!label\"\n</code></pre><p>\u6211\u5df2\u7ecf\u5c1d\u8bd5\u4e86\u8fd9\u4e48\u591a\uff0c\u5230\u5904\u641c\u7d22\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684\u8f6f\u4ef6\u5305\uff0c\u4f46\u8fd9\u4e9b\u90fd\u4e0d\u7ba1\u7528\u3002\n\u6211\u6240\u6709\u7684\u9879\u76ee\u90fd\u8fd0\u884c\u826f\u597d\uff0c\u76f8\u673a\u4e5f\u5728\u62cd\u7167\u5e76\u4fdd\u5b58\u5b83\u3002\u4f46\u7531\u4e8e\u4e0a\u8ff0\u9519\u8bef\uff0c\u6211\u65e0\u6cd5\u5728\u4e0d\u5173\u95ed\u6574\u4e2a\u9879\u76ee\u7684\u60c5\u51b5\u4e0b\u91cd\u65b0\u542f\u52a8\u76f8\u673a\u3002\u7531\u4e8e\u7167\u7247\u56fe\u50cf\u9519\u8bef\uff0c\u5b83\u4f1a\u79fb\u9664\u76f8\u673a\u5c4f\u5e55</p><p><strong>\u5982\u679c\u6709\u4eba\u80fd\u5e2e\u5fd9\uff0c\u90a3\u5c06\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u5e2e\u52a9\u3002</strong></p></div>"}
{"href": "https://www.cnpython.com/qa/1473002", "title": "\u4f7f\u7528Python\u7684Selenium\u591a\u7ebf\u7a0b", "content": "<div class=\"show-content\"><p>\u6211\u5df2\u7ecf\u7f16\u5199\u4e86\u4e00\u4e2apython\u6d4b\u8bd5\u811a\u672c\u6765\u6d4b\u8bd5\u7f51\u7ad9\u7684\u529f\u80fd\u3002\u8bf8\u5982\u767b\u5f55\u7f51\u9875\u7b49\u529f\u80fd\u3002\u4e3a\u4e86\u6700\u5927\u9650\u5ea6\u5730\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u5c1d\u8bd5\u5b9e\u73b0\u591a\u7ebf\u7a0b\u4ee5\u52a0\u5feb\u6d4b\u8bd5\u8fc7\u7a0b\uff08\u56e0\u6b64\u6211\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff09\u3002\u6211\u53d1\u73b0\u5f53\u6211\u8fd0\u884c\u811a\u672c\u65f6\uff0c\u4e24\u4e2a\u6d4f\u89c8\u5668\u5c06\u6253\u5f00\uff08\u8fd9\u662f\u6b63\u786e\u7684\uff09\uff0c\u4f46\u662f\uff0c\u53ea\u6709\u4e00\u4e2a\u6d4f\u89c8\u5668\u5c06\u6267\u884c\u6211\u7f16\u5199\u7684\u64cd\u4f5c\uff08\u4f8b\u5982\u5355\u51fb\u5143\u7d20\uff09\u3002\u6211\u80fd\u591f\u6b63\u786e\u5730\u4f7f\u7528browser.get\uff08link\uff09\uff0c\u4f46\u662fbrowser.find_element_by_xpath\uff08xpath\uff09\u3002click\uff08\uff09\u4e0d\u8d77\u4f5c\u7528</p><pre><code>thread1 = threading.Thread(target=runTC, args=(argument1,))\nthread2 = threading.Thread(target=runTC, args=(argument2,))\n# Will execute both in parallel\nthread1.start()\nthread2.start()\n</code></pre><p>runTC\uff08\uff09\u7531\u6211\u7f16\u5199\u7684\u6d4b\u8bd5\u51fd\u6570\u7ec4\u6210</p></div>"}
{"href": "https://www.cnpython.com/qa/1473040", "title": "\u6709\u6ca1\u6709\u529e\u6cd5\u5728pygame\u4e2d\u521b\u5efa\u7a97\u53e3\u5168\u5c4f\u6a21\u5f0f\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u5e0c\u671b\u7a97\u53e3\u6210\u4e3a\u6211\u7684\u5206\u8fa8\u7387\uff0c\u4f46\u4ecd\u663e\u793a\u9876\u90e8\u680f\u3002\u5c31\u50cf\u4f60\u628a\u7a97\u6237\u6700\u5927\u5316\u4e00\u6837\u3002\n\u8fd9\u5c31\u662f\u6211\u76ee\u524d\u6240\u62e5\u6709\u7684</p><pre class=\"lang-py prettyprint-override\"><code>os.environ['SDL_VIDEO_CENTERED'] = '1'\ndisplay_info = pygame.display.Info()\nself.width, self.height = display_info.current_w, display_info.current_h\nself.screen = pygame.display.set_mode((self.width, self.height), pygame.NOFRAME)\n</code></pre><p>\u4f46\u5b83\u4f3c\u4e4e\u4e0d\u8d77\u4f5c\u7528\uff0c\u53ea\u80fd\u5168\u5c4f\u663e\u793a\u6211\u7684\u51b3\u5fc3\u3002\u6211\u9519\u8fc7\u4e86\u4ec0\u4e48</p></div>"}
{"href": "https://www.cnpython.com/qa/1473004", "title": "\u5355\u51fb\u4e8b\u4ef6\u4ec5\u5728QPushButton\u7684\u6587\u672c\u4e0a\u53d1\u751f", "content": "<div class=\"show-content\"><p>\u5728Qt Designer\u4e2d\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u5e26\u6709\u4ee5\u4e0b\u6837\u5f0f\u8868\u7684\u6309\u94ae\uff1a<br><a href=\"https://i.stack.imgur.com/OjAAh.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OjAAh.png\" alt=\"style sheets\"></a></p><pre><code>QPushButton {\n    outline:0;\n    background: #434343;\n    color: #fff;\n    padding:10px 20px 10px 20px;\n    border-radius: 5px;\n}\nQPushButton:hover:!pressed{\n    background-color: rgb(115, 115, 115);\n    border:1px solid white;\n}\n</code></pre><p>\u6709\u4e86\u8fd9\u4e9b\u6837\u5f0f\u8868\uff0c\u4e3a\u4e86\u70b9\u51fb\u6309\u94ae\uff0c\u6211\u5fc5\u987b\u51c6\u786e\u5730\u70b9\u51fb\u5b83\u7684\u6587\u672c\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u6587\u672c\u5468\u56f4\u7684\u4efb\u4f55\u5730\u65b9\u90fd\u4e0d\u4f1a\u53d1\u51fa\u70b9\u51fb\u4fe1\u53f7\u3002\n\u8fd9\u662f\u56e0\u4e3a\u6ca1\u6709\u6837\u5f0f\u8868\u7684\u6309\u94ae\u6ca1\u6709\u95ee\u9898</p><p>\u4f7f\u7528pyuic5\u547d\u4ee4\u7684Qt\u8bbe\u8ba1\u5668\u7684\u8f93\u51fa\uff1a\n\u6211\u5728Windows10\u4e0a\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801</p><pre><code>from PyQt5 import QtCore, QtGui, QtWidgets\n\nclass Ui_MainWindow(object):\n    def setupUi(self, MainWindow):\n        MainWindow.setObjectName(\"MainWindow\")\n        MainWindow.resize(351, 271)\n        self.centralwidget = QtWidgets.QWidget(MainWindow)\n        self.centralwidget.setObjectName(\"centralwidget\")\n        self.pushButton = QtWidgets.QPushButton(self.centralwidget)\n        self.pushButton.setGeometry(QtCore.QRect(140, 20, 91, 51))\n        self.pushButton.setObjectName(\"pushButton\")\n        self.widget = QtWidgets.QWidget(self.centralwidget)\n        self.widget.setGeometry(QtCore.QRect(11, 118, 225, 78))\n        self.widget.setObjectName(\"widget\")\n        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)\n        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)\n        self.horizontalLayout.setObjectName(\"horizontalLayout\")\n        self.pushButton_2 = QtWidgets.QPushButton(self.widget)\n        self.pushButton_2.setStyleSheet(\"QPushButton {\\n\"\n                                        \"    outline:0;\\n\"\n                                        \"    background: #434343;\\n\"\n                                        \"    color: #fff;\\n\"\n                                        \"    padding:30;\\n\"\n                                        \"    border-radius: 5px;\\n\"\n                                        \"}\\n\"\n                                        \"QPushButton:hover:!pressed{\\n\"\n                                        \"    background-color: rgb(115, 115, 115);\\n\"\n                                        \"    border:1px solid white;\\n\"\n                                        \"}\\n\"\n                                        \"\")\n        self.pushButton_2.setObjectName(\"pushButton_2\")\n        self.horizontalLayout.addWidget(self.pushButton_2)\n        MainWindow.setCentralWidget(self.centralwidget)\n        self.menubar = QtWidgets.QMenuBar(MainWindow)\n        self.menubar.setGeometry(QtCore.QRect(0, 0, 351, 26))\n        self.menubar.setObjectName(\"menubar\")\n        MainWindow.setMenuBar(self.menubar)\n        self.statusbar = QtWidgets.QStatusBar(MainWindow)\n        self.statusbar.setObjectName(\"statusbar\")\n        MainWindow.setStatusBar(self.statusbar)\n\n        self.retranslateUi(MainWindow)\n        QtCore.QMetaObject.connectSlotsByName(MainWindow)\n        self.pushButton.clicked.connect(self.click)\n        self.pushButton_2.clicked.connect(self.click2)\n\n\n    def click(self):\n        print(\"click\")\n\n    def click2(self):\n        print(\"click2\")\n\n    def retranslateUi(self, MainWindow):\n        _translate = QtCore.QCoreApplication.translate\n        MainWindow.setWindowTitle(_translate(\"MainWindow\", \"MainWindow\"))\n        self.pushButton.setText(_translate(\"MainWindow\", \"PushButton\"))\n        self.pushButton_2.setText(_translate(\"MainWindow\", \"PushButton\"))\n\n\nif __name__ == \"__main__\":\n    import sys\n    app = QtWidgets.QApplication(sys.argv)\n    MainWindow = QtWidgets.QMainWindow()\n    ui = Ui_MainWindow()\n    ui.setupUi(MainWindow)\n    MainWindow.show()\n    sys.exit(app.exec_())\n</code></pre></div>"}
{"href": "https://www.cnpython.com/qa/1473005", "title": "matplotlib\u4e2d\u7684\u81ea\u5b9a\u4e49\u76f4\u65b9\u56fe\u89c4\u683c\u5316", "content": "<div class=\"show-content\"><p>\u6211\u8bd5\u56fe\u5728matplotlib\u4e2d\u5236\u4f5c\u4e00\u4e2a\u6807\u51c6\u5316\u76f4\u65b9\u56fe\uff0c\u4f46\u662f\u6211\u5e0c\u671b\u5b83\u6807\u51c6\u5316\uff0c\u8fd9\u6837\u603b\u9762\u79ef\u5c06\u4e3a1000\u3002\u6709\u529e\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\u5417</p><p>\u6211\u77e5\u9053\u8981\u5c06\u5b83\u89c4\u8303\u5316\u4e3a1\uff0c\u53ea\u9700\u5728<code>plt.hist()</code>\u7684\u53c2\u6570\u4e2d\u5305\u542b<code>density=True,stacked=True</code>\u3002\u4e00\u4e2a\u7b49\u6548\u7684\u89e3\u51b3\u65b9\u6848\u662f\u8fd9\u6837\u505a\uff0c\u5c06\u6bcf\u5217\u7684\u9ad8\u5ea6\u4e58\u4ee51000\uff0c\u5982\u679c\u8fd9\u6bd4\u6539\u53d8\u76f4\u65b9\u56fe\u7684\u89c4\u683c\u5316\u66f4\u53ef\u884c\u7684\u8bdd</p><p>\u63d0\u524d\u975e\u5e38\u611f\u8c22</p></div>"}
{"href": "https://www.cnpython.com/qa/1473006", "title": "\u5927\u578b\u6570\u636e\u96c6\u4e0a\u7684DBSCAN\u5b9e\u73b0\uff08\u767e\u4e07\u884c\uff09", "content": "<div class=\"show-content\"><p>\u56e0\u6b64\uff0c\u6211\u5c06kmeans\u5e94\u7528\u4e8e\u4e00\u4e2a\u5927\u578b\u6570\u636e\u96c6\uff0c\u6211\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u805a\u7c7b\uff0c\u5f97\u5230\u7684\u805a\u7c7b\u7ed3\u679c\u5982\u4e0b</p><p><a href=\"https://i.stack.imgur.com/6R5jD.png\" rel=\"nofollow noreferrer\">kmeans-result</a></p><p>\u4f46\u662f\u6211\u6ca1\u6709\u5904\u7406\u5f02\u5e38\u503c\uff0c\u6211\u60f3\u6211\u60f3\u5728\u76f8\u540c\u7684\u6570\u636e\u4e0a\u5b9e\u73b0dbscan\u7b97\u6cd5\uff0c\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4f46\u95ee\u9898\u662f\u6211\u9700\u8981\u6709<code>epsilon</code>\u548c<code>min_samples</code>\u7684\u6700\u4f73\u503c\u3002\u56e0\u6b64\uff0c\u6211\u91c7\u7528\u4e86\u4f7f\u7528\u6700\u8fd1\u90bb\u6cd5\u5bfb\u627e\u6700\u4f18\u03b5\u7684\u65b9\u6cd5\uff0c\u4f46\u5f97\u5230\u7684\u56fe\u5982\u4e0b\u6240\u793a</p><p>\u83b7\u5f97\u6700\u4f73\u03b5\u7684\u5f2f\u5934\u65b9\u6cd5\uff1a</p><p><a href=\"https://i.stack.imgur.com/cgwQe.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/cgwQe.png\" alt=\"\"></a></p><p>\u6240\u4ee5\u73b0\u5728\u6211\u627e\u4e0d\u5230\u6211\u7684\u6700\u4f73\u03b5\u503c\u548c<code>min_samples</code>\u503c\uff0c\u6211\u5b9e\u9645\u4e0a\u5e0c\u671b\u5b83\u662f3\u4e2a\u7c07\u7528\u4e8e\u6211\u7684\u5206\u6790\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u4e86\u4e00\u4e9b\u03b5\u503c\u548c<code>min_samples</code>\u503c\uff0c\u5728<code>epsilon = 0.000001</code>\u548c<code>min_samples = 2000</code>\u5904\uff0c\u6211\u5f97\u5230\u4e86\u4f30\u8ba1\u7684\u7c07\u6570\u4e3a3\uff0c\u4f46\u5f53\u6211\u53ef\u89c6\u5316\u8fd9\u4e9b\u7c07\u65f6\uff0c\u5b83\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u56fe\u7247\u5982\u4e0b\uff1a</p><p><a href=\"https://i.stack.imgur.com/x8V5y.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/x8V5y.png\" alt=\"dbscan-result\"></a></p><p>\u6211\u4e3adbscan\u7f16\u5199\u7684\u4ee3\u7801\u5982\u4e0b</p><p><a href=\"https://i.stack.imgur.com/WBHO8.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/WBHO8.png\" alt=\"dbscan code\"></a></p><p>\u5982\u679c\u6709\u4eba\u60f3\u67e5\u770b\u5b8c\u6574\u7684\u6587\u4ef6\uff0c\u8fd9\u91cc\u6709colab\u6587\u4ef6\u94fe\u63a5\u3002<a href=\"https://colab.research.google.com/drive/10i5skpEw85XDjVIEd2Wxzir2q5lQSI7m?usp=sharing\" rel=\"nofollow noreferrer\">colab file</a></p></div>"}
{"href": "https://www.cnpython.com/qa/1473009", "title": "Python\u5728\u540e\u53f0\u6355\u83b7\u952e\u76d8\u8f93\u5165\u5e76\u5bf9\u5176\u8fdb\u884c\u5904\u7406", "content": "<div class=\"show-content\"><p>\u6211\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u4e00\u4e2apython\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6355\u83b7\u6240\u6709\u952e\u76d8\u8f93\u5165\uff0c\u7136\u540e\u6839\u636e\u7ed9\u5b9a\u7684\u8f93\u5165\u6a21\u62df\u952e\u76d8\u8f93\u5165\n\u4f8b\u5982\uff0c\u6211\u5728windows\u8bb0\u4e8b\u672c\u4e2d\u952e\u5165\u5b57\u6bcda\n\u6211\u7684python\u7a0b\u5e8f\u6355\u6349\u5230\u8fd9\u4e00\u70b9\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6a21\u62df\u952e\u76d8\u8f93\u5165\uff0c\u4f8b\u5982b\n\u6355\u6349\u952e\u76d8\u8f93\u5165\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f\n\u6211\u7814\u7a76\u4e86\u4f7f\u7528\u4fee\u6539\u8fc7\u7684\u952e\u76d8\u8bb0\u5f55\u5668\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u662f\u6211\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u505c\u6b62\u952e\u5165\u4f8b\u5982\u5b57\u7b26a</p></div>"}
{"href": "https://www.cnpython.com/qa/1473007", "title": "\u5982\u4f55\u6355\u83b7\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u4e2d\u7684\u8d8b\u52bf\uff0c\u4ee5\u4fbf\u4f7f\u7528scikitlearn\u7684\u7ebf\u6027\u56de\u5f52\uff08\uff09\u8fdb\u884c\u9884\u6d4b", "content": "<div class=\"show-content\"><p>\u6211\u8bfb\u8fc7\u4e00\u4e9b\u5173\u4e8e\u4f7f\u7528ML\u8fdb\u884c\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u7684\u6587\u732e\u3002\u6211\u4e86\u89e3\u4e86</p><ol><li>\u8d8b\u52bf</li><li>\u5b63\u8282\u6027</li><li>\u5faa\u73af\u7684</li><li>\u566a\u97f3</li></ol><p>\u6211\u60f3\u4f7f\u7528scikit learn\u7684LinearRegression\uff08\uff09\u4f5c\u4e3a\u5f00\u59cb\u8fdb\u884c\u9884\u6d4b\u3002\u5982\u679c\u6211\u505a\u5bf9\u4e86\uff0c\u6211\u53ef\u4ee5\u7528\u4e00\u4e9b\u7279\u5f81\u5de5\u7a0b\u6765\u6355\u6349\u5b63\u8282\u6027\u548c\u5468\u671f\u6027\uff0c\u6bd4\u5982<code>day_of_week</code>\u3001<code>month</code>\u6216<code>seasons</code>\u3002\u4f46\u6211\u4e0d\u660e\u767d\uff0c\u5982\u4f55\u5728\u6570\u636e\u4e2d\u6355\u6349\u8d8b\u52bf\u3002\u662f\u6ede\u540e\u7279\u5f81\u8fd8\u662f\u4e00\u5217\u8ba1\u7b97\u5dee\u5f02\u800c\u4e0d\u662f\u603b\u8ba1</p></div>"}
{"href": "https://www.cnpython.com/qa/1473010", "title": "Python\u68c0\u67e5json\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u503c", "content": "<div class=\"show-content\"><div></div><p>\u6211\u6709\u4ee5\u4e0bpython\u811a\u672c</p><pre><code>def main():\n    json_obj = {\n        \"attributes\": [\n            {\n                \"key\": \"some key\",\n                \"value\": \"hello\"\n            }\n        ]\n    }\n\n    needle = \"hello\"\n    if needle in json_obj[\"attributes\"]:\n        print(\"yay\")\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre><p>\u73b0\u5728\u6211\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48print\u8bed\u53e5\u8fd4\u56defalse\u3002\u9488\u5934\u80af\u5b9a\u5728\u540d\u5355\u4e0a</p></div>"}
{"href": "https://www.cnpython.com/qa/1473011", "title": "\u5982\u4f55\u57fa\u4e8ePython\u4e2d\u7684\u516c\u5171\u952e\u503c\u5bf9\u6709\u6548\u5730\u5c06\u952e\u503c\u4ece\u4e00\u4e2a\u5b57\u5178\u5217\u8868\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u5b57\u5178\u5217\u8868\u4e2d\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u6709\u4e00\u5927\u5806python\u8bcd\u5178\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p><pre><code>big_list_dictionary = [{\n    'name': 'test = 1',\n    'id': 1,\n    'value': 30\n},{\n    'name': 'apple = 1',\n    'id': 2,\n    'value': 70\n},{\n    'name': 'orange = 1',\n    'id': 3,\n    'value': 10\n},{\n    'name': 'balloon = 1',\n    'id': 4,\n    'value': 20\n},{\n    'name': 'airplane = 1',\n    'id': 5,\n    'value': 40\n}]\n</code></pre><p>\u6211\u6709\u4e24\u672c\u5b57\u5178\u7684\u6e05\u5355\uff0c\u4e0a\u9762\u6709\u5b83\u4eec\u7684\u603b\u4ef7\u503c</p><pre><code>total1 = [{\n    'name': 'test',\n    'total': 130\n},{\n    'name': 'apple',\n    'total': 270\n},{\n    'name': 'orange',\n    'total': 310\n},{\n    'name': 'balloon',\n    'total': 420\n},{\n    'name': 'airplane',\n    'total': 540\n}]\n\ntotal2 = [{\n    'name': 'test',\n    'total': 230\n},{\n    'name': 'apple',\n    'total': 570\n},{\n    'name': 'orange',\n    'total': 3210\n},{\n    'name': 'balloon',\n    'total': 620\n},{\n    'name': 'airplane',\n    'total': 940\n}]\n</code></pre><p>\u5982\u679c\u60a8\u6ce8\u610f\u5230\uff0c<code>total1</code>\u548c<code>total2</code>\u4e2d\u7684<code>name</code>\u4e0e\u7701\u7565\u4e86<code>= 1</code>\u7684<code>big_list_dictionary</code>\u7a0d\u6709\u4e0d\u540c</p><p>\u5982\u4f55\u5c06<code>total1</code>\u548c<code>total2</code>\u4e2d\u7684\u603b\u503c\u6dfb\u52a0\u5230<code>big_list_dictionary</code>\u4e2d\uff0c\u4ee5\u4f7f\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a</p><pre><code>[{\n    'name': 'test = 1',\n    'id': 1,\n    'value': 30,\n    'total2': 230,\n    'total1': 130\n},{\n    'name': 'apple = 1',\n    'id': 2,\n    'value': 70,\n    'total2': 570,\n    'total1': 270\n},{\n    'name': 'orange = 1',\n    'id': 3,\n    'value': 10,\n    'total2': 3210,\n    'total1': 310\n},{\n    'name': 'balloon = 1',\n    'id': 4,\n    'value': 20,\n    'total2': 620,\n    'total1': 420\n},{\n    'name': 'airplane = 1',\n    'id': 5,\n    'value': 40,\n    'total2': 940,\n    'total1': 540\n}]\n</code></pre><p>\u76ee\u524d\uff0c\u6211\u505a\u8fd9\u4ef6\u4e8b\u7684\u65b9\u5f0f\u5f88\u6162</p><pre><code>    for item in big_list_dictionary:\n        for t1,t2 in zip(total1,total2):\n            if t1['name'] in item['name']:\n                item['total1] = t1['total']\n                item['total2'] = t2['total']\n</code></pre><p>\u6211\u600e\u6837\u624d\u80fd\u6709\u6548\u5730\u505a\u5230\u8fd9\u4e00\u70b9</p></div>"}
{"href": "https://www.cnpython.com/qa/1473008", "title": "\u5982\u4f55\u4f7f\u7528\u5e03\u5c14\u503c\u9000\u51fa\u201cfor\u201d\u5faa\u73af\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u662fPython\u7684\u521d\u5b66\u8005\uff0c\u6240\u4ee5\u5982\u679c\u6211\u7684\u95ee\u9898\u975e\u5e38\u57fa\u672c\u6216\u660e\u663e\uff0c\u6211\u4f1a\u63d0\u524d\u9053\u6b49\u3002\u6211\u6b63\u5728\u5c1d\u8bd5\u7f16\u5199\u4e00\u4e2a\u540d\u4e3a<code>find(my_list, value)</code>\u7684\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u5217\u8868\u548c\u4e00\u4e2a\u503c\u4f5c\u4e3a\u53c2\u6570\u3002\u51fd\u6570\u5728\u5217\u8868\u4e2d\u641c\u7d22\u8be5\u503c\uff0c\u5e76\u8fd4\u56de\u5728\u5217\u8868\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u8be5\u503c\u7684\u7d22\u5f15\u3002\u5982\u679c\u5728\u5217\u8868\u4e2d\u627e\u4e0d\u5230\u503c\uff0c\u6211\u5e0c\u671b\u51fd\u6570\u8fd4\u56de-1</p><p>\u95ee\u9898\u662f\u9664\u4e86<code>range()</code>\u548c<code>str()</code>\u4e4b\u5916\uff0c\u6211\u65e0\u6cd5\u4f7f\u7528\u4efb\u4f55\u5185\u7f6e\u51fd\u6570\u3002\u6211\u4e5f\u4e0d\u80fd\u4f7f\u7528<code>quit()</code>\u6216<code>exit()</code>\u6216<code>break</code>\u6216<code>return</code>\u8bed\u53e5\u9000\u51fa\u5faa\u73af</p><p>\u6211\u8bd5\u56fe\u4f7f\u7528\u201cfor\u201d\u5faa\u73af\u65b9\u6cd5\u4ee5\u53ca\u5e03\u5c14\u8bed\u53e5\uff08\u63a7\u5236\u4f55\u65f6\u505c\u6b62\u5faa\u73af\uff09\u3002\u6211\u8ba4\u4e3a\u6211\u5728\u6b63\u786e\u7684\u8f68\u9053\u4e0a\uff0c\u4f46\u6211\u76f8\u4fe1\u6211\u7684\u5b9e\u73b0\u5b58\u5728\u95ee\u9898\u3002\u5f53\u5217\u8868\u4e2d\u7684\u503c\u4e3a<em>\u800c\u975e</em>\u65f6\uff0c\u6211\u5c06\u83b7\u5f97\u6240\u9700\u7684\u8f93\u51fa\uff08-1\uff09\u3002\u4f46\u662f\uff0c\u5f53\u503c\u5728\u5217\u8868\u4e2d\u65f6\uff0c\u6211\u4f3c\u4e4e\u65e0\u6cd5\u83b7\u5f97\u6240\u9700\u7684\u8f93\u51fa\u3002\u4efb\u4f55\u6307\u5bfc\u90fd\u5c06\u4e0d\u80dc\u611f\u6fc0</p><pre><code>    def find(my_list, value):\n\n        index = 0\n        valid = False\n\n        if value != my_list:\n            found = -1\n\n        for element in my_list:\n            if element == value:\n                valid = True\n                found = index\n\n        else: \n            index += 1\n\n    return found\n</code></pre><p>\u540d\u5355\u5982\u4e0b\uff1a</p><pre><code>    str_list1 = ['r', 'i', 'n', 'g', 'i', 'n', 'g']\n</code></pre><p>\u5bf9\u51fd\u6570\u7684\u8c03\u7528\uff1a</p><pre><code>    print(list_function.find(str_list1, 'g'))\n    print(list_function.find(str_list1, 'z'))\n</code></pre><p>\u9884\u671f\u4ea7\u51fa\uff1a</p><pre><code>    3\n    -1\n</code></pre></div>"}
{"href": "https://www.cnpython.com/qa/1473013", "title": "\u5982\u4f55\u4ece\u5177\u6709\u9644\u52a0\u5217\u7684\u65b0\u6570\u636e\u5e27\u66f4\u65b0\u6570\u636e\u5e27\uff1f", "content": "<div class=\"show-content\"><p>\u5728<a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.update.html\" rel=\"nofollow noreferrer\">pandas.DataFrame.update</a>\u7684\u5e2e\u52a9\u9875\u9762\u4e2d\uff0c\u4ed6\u4eec\u6709\u4ee5\u4e0b\u4f7f\u7528\u65b0\u7684_df\u66f4\u65b0df\u7684\u793a\u4f8b\uff1a</p><pre><code>df = pd.DataFrame({'A': [1, 2, 3],\n                   'B': [400, 500, 600]})\nnew_df = pd.DataFrame({'B': [4, 5, 6],\n                       'C': [7, 8, 9]})\ndf.update(new_df)\ndf\n   A  B\n0  1  4\n1  2  5\n2  3  6\n</code></pre><p>\u4f7f\u7528update\u547d\u4ee4\u4f7f\u201cC\u201d\u5728df\u4e2d\u663e\u793a\u4e3a\u65b0\u5217\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u6211\u65e0\u6cd5\u7406\u89e3\uff0c\u4f46\u5982\u679c\u6211\u4f7f\u7528\u4ee5\u4e0b\u4efb\u4e00\u65b9\u6cd5\u5728df\u4e2d\u521b\u5efa\u65b0\u5217\uff1a</p><pre><code>df['C'] = np.NaN\ndf['C'] = 0\n</code></pre><p>\u8fd9\u4f3c\u4e4e\u586b\u5145\u4e86\u5b83\uff0c\u4f46\u6211\u60f3\u77e5\u9053\u662f\u5426\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u6216\u67d0\u79cd\u65b9\u6cd5\u5728df.update\u4e2d\u5b9e\u73b0\u5b83</p></div>"}
{"href": "https://www.cnpython.com/qa/1473012", "title": "\u4f7f\u7528Frida\u8ddf\u8e2aCCCrypt\u8c03\u7528", "content": "<div class=\"show-content\"><p>\u6211\u5728\u8bd5\u7740\u7406\u89e3\u4e00\u4e2a\u5bc6\u7801\u3002\u4f7f\u7528Frida\uff0c\u6211\u80fd\u591f\u83b7\u5f97\u76f8\u5173\u4fe1\u606f\uff0c\u5982</p><p>\u5bc6\u94a5\uff0cIV\uff0c\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u7684\u4efb\u4f55CCCrypt\u8c03\u7528\u3002\u6211\u770b\u5230\u8fd9\u4e9b\u8c03\u7528\u662f\u5728AJAX\u8c03\u7528\u53d1\u751f\u65f6\u89e6\u53d1\u7684</p><p>\u6211\u7684\u5370\u8c61\u662f\uff0c\u8fd9\u4e2aCCCrypt\u8d1f\u8d23\u5728\u5e94\u7528\u7a0b\u5e8fajax\u8c03\u7528\u4e2d\u751f\u6210<code>signature</code>val</p><p>\u6211\u80fd\u591f\u5f97\u5230Key\u548cIV\u3002\u4f7f\u7528Key\u548cIV\uff0c\u6211\u5982\u4f55\u4f7f\u7528python\u4e2d\u7684\u7b97\u6cd5\u6765\u521b\u5efa\u76f8\u540c\u7684\u52a0\u5bc6\u503c</p><p><a href=\"https://i.stack.imgur.com/ZJZO4.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ZJZO4.png\" alt=\"enter image description here\"></a></p><p>\u4e0d\u786e\u5b9a\uff0c\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5bb9\u5728\u8fd9\u91cc\u5bf9\u52a0\u5bc6\u8d77\u4f5c\u7528</p><p>\u6211\u7684python\u7b97\u6cd5\u5982\u4e0b\u6240\u793a</p><pre><code>data = b'9217977535687062886'\nkey = codecs.decode('3f2c593b7d469602af5a6fb718bc92cc', 'hex')\ncipher = AES.new(key, AES.MODE_CBC) # Create a AES cipher object with the key using the mode CBC\nciphered_data = cipher.encrypt(pad(data, AES.block_size)) # Pad the input data and then encrypt\nprint(b64encode(ciphered_data))\n</code></pre><p>\u6211\u4e0d\u786e\u5b9a\u8fd9\u91cc\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5728\u4e0a\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u4e2d\u662f\u5426\u4f1a\u663e\u793a<code>In Buffer</code></p><p>\u6211\u7684\u95ee\u9898\u662f-\u7ed9\u5b9a\u5bc6\u94a5\uff0cIV\u548c\u7f13\u51b2\u533a\u4e2d\u5982\u4f55\u4f7f\u7528python\u52a0\u5bc6\u5bc6\u94a5</p><p>\u5bf9\u4e8e\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\uff0c\u52a0\u5bc6\u5bc6\u94a5\u6700\u7ec8\u770b\u8d77\u6765\u50cf<code>signature</code></p><pre><code>params = (\n    ('app_version', '12.85.0'),\n    ('cc', 'US'),\n    ('device_type', 'iPhone8,2/13.5.1'),\n    ('guest_user_tokens', '[]'),\n    ('lang', 'en'),\n    ('locale', 'en_US'),\n    ('potential_transactions', '[]'),\n    ('time', '1620627621'),\n)\n</code></pre><p>\u6211\u7684\u5370\u8c61\u662f\u7b7e\u540d\u57fa\u672c\u4e0a\u662f\u53c2\u6570\u7684<code>hash</code>\u503c\uff0c\u4f46\u6211\u5c1d\u8bd5\u4e86\n\u7c7b\u4f3c\u8fd9\u6837\u7684\u4e1c\u897f\u4e5f\u4f1a\u6563\u5217\uff08params\uff09\u5e76\u5c06\u6b64\u503c\u4f20\u9012\u7ed9my<code>data</code></p><p><a href=\"https://i.stack.imgur.com/LIQwS.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/LIQwS.png\" alt=\"enter image description here\"></a></p><p>\u6211\u7684\u7b7e\u540d\u6700\u7ec8\u5e94\u8be5\u662f24\u4e2a\u5b57\u7b26\u957f</p></div>"}
{"href": "https://www.cnpython.com/qa/1473014", "title": "tkinter Python\uff1a\u5355\u51fb\u5176\u4ed6\u6309\u94ae\u540e\u5982\u4f55\u66f4\u6539\u6309\u94ae\u989c\u8272\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u60f3\u5728\u5355\u51fb\u6309\u94ae\u65f6\u66f4\u6539\u76f8\u90bb\u6309\u94ae\u7684\u989c\u8272\u3002\u6211\u6b63\u5728tkinter\u4e3a19x19\u7684\u68cb\u76d8\u6e38\u620f\u5236\u4f5cGUI\u3002\u60f3\u8c61\u4e00\u4e0b\u50cfmindsweeper\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u6574\u4e2a\u7535\u8def\u677f\u7531\u6309\u94ae\u7ec4\u6210\u3002\u6211\u6b63\u5728\u4f7f\u7528python 3.7</p><p>\u8fd9\u662f\u6211\u7684\u4ee3\u7801\uff0c\u7528\u4e8e\u4e00\u4e2a\u7b80\u5355\u76841x2\u6e38\u620f\u573a</p><pre><code>import tkinter as tk\n\ndef do_something(p):\n    p.configure(bg = 'blue')\n\ndef personal_do_something(p):\n    p.configure(bg = 'blue')\n    p1.configure(bg = 'blue')\n\nwindow = tk.Tk()\nframe = tk.Frame(master = window)\nframe.pack()\np1 = tk.Button(master = frame, width = 10, height = 5, bg = 'orange', command = lambda:do_something(p1))\np2 = tk.Button(master = frame, width = 10, height = 5, bg = 'khaki', command = lambda:personal_do_something(p2))\np1.pack(side=tk.LEFT)\np2.pack(side=tk.LEFT)\nwindow.mainloop()\n</code></pre><p>\u8d77\u59cb\u60c5\u51b5\uff1a</p><p><img src=\"https://i.stack.imgur.com/Xqt3H.png\" alt=\"start\"></p><p>\u5355\u51fbp1\uff1a</p><p><img src=\"https://i.stack.imgur.com/KgKzZ.png\" alt=\"p1 clicked\"></p><p>\u5355\u51fbp2\uff1a</p><p><img src=\"https://i.stack.imgur.com/HtSib.png\" alt=\"p2 clicked\"></p><p>\u5355\u51fbp1\u65f6\uff0c\u53ea\u6709p1\u53d8\u4e3a\u84dd\u8272\uff0c\u800c\u4e0d\u662f\u5176\u76f8\u90bbp2\u3002\u5355\u51fbp2\u65f6\uff0cp1\u548cp2\u5747\u53d8\u4e3a\u84dd\u8272\u3002\u4f46\u662f\uff0c\u8fd9\u53ea\u9002\u7528\u4e8ep2\uff0c\u56e0\u4e3ap2\u6709\u4e00\u4e2a\u4e2a\u4eba\u7684\u51fd\u6570\u3002\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u6211\u660e\u786e\u5730\u544a\u8bc9p1\u53d8\u84dd\u3002\u5bf9\u4e8e\u5c0f1x2\u677f\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\uff0c\u4f46\u5f53\u670919x19\u4e2a\u6309\u94ae\u65f6\uff0c\u6211\u65e0\u6cd5\u4e3a\u6bcf\u4e2a\u6309\u94ae\u7f16\u5199\u4e2a\u4eba\u51fd\u6570\u3002\u6709\u6ca1\u6709\u4eba\u77e5\u9053\u6211\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u603b\u662f\u4f7f\u76f4\u63a5\u90bb\u57df\u53d8\u84dd\u7684\u4e00\u822c\u51fd\u6570\uff1f\u6211\u5047\u8bbe\u6211\u5fc5\u987b\u5411\u6309\u94ae\u6dfb\u52a0\u67d0\u79cd\u5c5e\u6027\uff0c\u4f8b\u5982\u5750\u6807\uff0c\u7136\u540e\u641c\u7d22\u4e0e\u76f8\u90bb\u5750\u6807\u5339\u914d\u7684\u6240\u6709\u6309\u94ae\u6216\u7c7b\u4f3c\u7684\u5185\u5bb9\u3002\u4f46\u6211\u4e0d\u77e5\u9053\u600e\u4e48\u505a</p><p>\u63d0\u524d\u611f\u8c22\uff1a\uff09</p></div>"}
{"href": "https://www.cnpython.com/qa/1473015", "title": "\u5982\u4f55\u5c06\u80cc\u666f\u6e10\u53d8\u8272\u8d34\u56fe\u201cRdYlGn\u201d\u5e94\u7528\u4e8e\u67d0\u4e9b\u8868\u884c\uff0c\u800c\u5c06\u5176\u53cd\u5411\u201cRdYlGn\\u r\u201d\u5e94\u7528\u4e8e\u540c\u4e00\u8868\u4e2d\u7684\u5176\u4ed6\u884c\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u6709\u4e00\u4e2acsv\u6587\u4ef6\uff0c\u6211\u6b63\u5728\u8bfb\u5230jupyter\u7b14\u8bb0\u672c\u4e2d\uff0c\u5e76\u5728\u90a3\u91cc\u8bbe\u7f6e\u6837\u5f0f\u3002csv\u6570\u636e\u5982\u4e0b\u6240\u793a\uff1a</p><pre><code>[[' ', 'VZ', 'T', 'TMUS'],\n['Current Ratio', 1.4, 0.8, 1.1],\n['Quick Ratio', 1.3, 0.8, 1.0],\n['Debt to Equity', 1.9, 0.97, 1.17],\n['LT Debt to Equity', 1.82, 0.95, 1.09],\n['ROA', 6.1, 2.0, 1.8],\n['ROI', 10.9, 1.7, 4.1],\n['Gross Margin', 59.5, 52.7, 59.6],\n['Oper. Margin', 19.1, 13.0, 9.7],\n['Profit Margin', 14.1, 6.3, 4.5]]\n</code></pre><p>\u6211\u5c1d\u8bd5\u8fc7\u7684\u4ee3\u7801\u662f\uff1a</p><pre><code>import pandas as pd\n\ndata = pd.read_csv('/Users/broderickbonelli/Desktop/test.csv', index_col=\" \")\n\ndata = data.style.background_gradient(axis=1, cmap='RdYlGn').set_precision(2).background_gradient(cmap='RdYlGn_r', subset=(data.index[2], data.columns)).background_gradient(cmap='RdYlGn_r', subset=(data.index[3], data.columns))\n\ndisplay(data)\n</code></pre><p>\u7b2c\u4e00\u4e2a\u5e26\u6709\u989c\u8272\u8d34\u56fe\u201cRdYlGn\u201d\u7684\u80cc\u666f\u6e10\u53d8\u975e\u5e38\u9002\u7528\uff0c\u4f46\u662f\u5f53\u6211\u4f7f\u7528subset\u5c5e\u6027\u5c06background_gradient\uff08\uff09\u51fd\u6570\u94fe\u63a5\u5230\u7279\u5b9a\u884c\uff0c\u5e76\u5e94\u7528\u53cd\u5411\u989c\u8272\u8d34\u56fe\u201cRdYlGn_r\u201d\u65f6\uff0c\u6e10\u53d8\u4e0d\u4f1a\u6b63\u786e\u5e94\u7528\uff0c\u56e0\u4e3a\u6240\u6709\u503c\u90fd\u662f\u76f8\u540c\u7684\u989c\u8272\uff1a</p><p><a href=\"https://i.stack.imgur.com/5QdK2.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/5QdK2.png\" alt=\"Table with 'RdYlGn' applied correctly, but 'RdYlGn_r' applied incorrectly\"></a></p><p>\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u672a\u6b63\u786e\u5e94\u7528\u201c\u503a\u8f6c\u80a1\u201d\u548c\u201cLT\u503a\u8f6c\u80a1\u201d\u884c\u3002\u6211\u8fd8\u5c1d\u8bd5\u8fc7\u4f7f\u7528background_gradient\uff08\uff09\u65b9\u6cd5\u7684high\u548clow\u5c5e\u6027\u6765\u8c03\u6574\u8303\u56f4\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002\u4efb\u4f55\u5e2e\u52a9\u90fd\u5c06\u4e0d\u80dc\u611f\u6fc0</p></div>"}
{"href": "https://www.cnpython.com/qa/1473016", "title": "\u6a21\u5757\u5185\u90e8pytest\u7684\u6267\u884c\u987a\u5e8f\u662f\u76f8\u53cd\u7684\u3002\u6211\u8be5\u5982\u4f55\u8bbe\u7f6e\u5b83\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u77e5\u9053\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d4b\u8bd5\u5c06\u6309\u7167\u7c7b/\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684\u987a\u5e8f\u6267\u884c\u3002\u4f46\u5c31\u6211\u800c\u8a00\uff0c\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\u3002\u6211\u8be5\u600e\u4e48\u7ea0\u6b63\u5462</p><p>\u793a\u4f8b\u4ee3\u7801\uff1a</p><pre class=\"lang-py prettyprint-override\"><code>def test_a():\n    assert True\n\n\ndef test_d():\n    assert True\n\n\ndef test_c():\n    assert True\n</code></pre><p>\u6267\u884c\u987a\u5e8f\u4e3a\uff1a</p><pre><code>test_demo4.py::test_c PASSED                                                                                                                        \ntest_demo4.py::test_d PASSED                                                                                                                        \ntest_demo4.py::test_a PASSED \n</code></pre><p>\u90a3\u4e48\uff0c\u5982\u4f55\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u6267\u884c\u987a\u5e8f\uff1f\u6211\u60f3\u4e0d\u51fa\u4e00\u4e2a\u529e\u6cd5</p></div>"}
{"href": "https://www.cnpython.com/qa/1473018", "title": "\u5982\u4f55\u7528\u591a\u4e2a\u8fde\u7eed\u7684Conv2D\u5c42\u66ff\u6362keras\u4e2d\u7684Conv2D\u5c42\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u5c1d\u8bd5\u91c7\u7528VGG 19\u7684\u4e00\u4e2a\u7279\u5b9a\u5377\u79ef\u5c42\uff0c\u5e76\u5c1d\u8bd5\u5c06\u5176\u66ff\u6362\u4e3a3\u4e2a\u4e0d\u540c\u7684\u5377\u79ef\u5c42\uff0c\u4ee5\u4fbf3\u4e2a\u5c42\u4e2d\u7684\u7b2c\u4e00\u4e2aconv\u5c42\u6ee1\u8db3\u524d\u4e00\u5c42\u7684\u8f93\u5165\u6761\u4ef6\uff0c\u6700\u540e\u4e00\u4e2aconv\u5c42\u4ea7\u751f\u4e0e\u539f\u59cb\u5377\u79ef\u5c42\u5b8c\u5168\u76f8\u540c\u7684\u8f93\u51fa</p><pre><code>from tensorflow.keras.applications.vgg19 import VGG19\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.applications.vgg19 import preprocess_input\nfrom tensorflow.keras.models import Model\nimport numpy as np\n\nmodel_old = VGG19(weights='imagenet')\n</code></pre><p>\u6211\u5c06VGG\u6a21\u578b\u547d\u540d\u4e3a\u201cmodel_old\u201d</p><p>\u4ee5\u4e0b\u662f3 Conv\u5c42\u7684\u51fd\u6570\uff1a</p><pre><code>\nimport tensorflow as tf\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Conv2D, Flatten\n\ndef multiple_conv_layer(layer_id):\n    \n    model = Sequential()\n\n    model.add(Conv2D(3, kernel_size=1,input_shape=(28,28,3), strides = (1,1), \\\n                 padding = 'same',dilation_rate = (1,1), activation = 'relu', use_bias = False))\n    model.add(Conv2D(8, kernel_size=3, activation = 'relu', \\\n                                        use_bias = False))\n    model.add(Conv2D(64, kernel_size=1, strides = (1,1), \\\n                                        padding = 'same', dilation_rate = a.dilation_rate, use_bias = False))\n    return(model)\n</code></pre><p>\u5f53\u6211\u5c1d\u8bd5\u50cf<code>model_old.layers[1] = multiple_conv_layer( 1 )</code>\u8fd9\u6837\u505a\u65f6\uff0c\u8be5\u5c42\u5e76\u6ca1\u6709\u88ab\u65b0\u7684\u987a\u5e8f\u6a21\u578b\u6240\u53d6\u4ee3\u3002\u5173\u4e8e\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u6709\u4ec0\u4e48\u7ebf\u7d22\u5417</p></div>"}
{"href": "https://www.cnpython.com/qa/1473019", "title": "\u4f7f\u7528\u7852\u522e\u524aingramer\u65f6\u51fa\u9519", "content": "<div class=\"show-content\"><p>\u6211\u60f3\u901a\u8fc7Ingram\u7f51\u7ad9\u4e0b\u8f7dInstagram\u7167\u7247\u3002\u8fd9\u662f\u6211\u7684\u5bc6\u7801\uff1a</p><pre class=\"lang-py prettyprint-override\"><code>from selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nimport time\nimport os\ntime_to_scroll=50\nos.chdir(r'C:\\Users\\ir\\Downloads')\nimage_src_list=set()\n\n\nb = webdriver.Chrome()\nb.get('https://ingramer.com/profiles/instagram-viewer')\ntime.sleep(3)\nsearch=b.find_element_by_id('downloaderform-url')\nsearch.send_keys('my-instagram-user')\nsearch.submit()\nwhile time_to_scroll:\n    time.sleep(10)\n    image_div=b.find_elements_by_xpath('/html/body/div[1]/main/div/div[4]/div/div/div/div/div/div/div')\n    for div in image_div:\n        try:\n            image=div.find_element_by_tag_name('img')\n            if image:\n                image_src_list.add(image.get_attribute(\"src\"))\n        except:\n            print('sonthing missed')\n    nextpage=b.find_element_by_id(\"viewer-next-button\")\n    b.execute_script(\"arguments[0].scrollIntoView()\",nextpage)\n    nextpage.click()\n    nextpage.click()\n    time_to_scroll-=1\n    \ndef downlad_image(urls):  \n    count=0\n    for url in urls:\n        reponse = requests.get(url)\n        if reponse.status_code == 200:\n            with open(f\"search{count+1}.jpg\",\"wb\") as file:\n                file.write(reponse.content)\n        count+=1\ndownlad_image(image_src_list)\n</code></pre><p>\u4f46\u5b83\u7ed9\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u9519\u8bef\uff1a</p><pre><code> Traceback (most recent call last):\n  File \"D:\\tamrin\\python\\tamrin.py\", line 29, in &lt;module&gt;\n    nextpage.click()\n  File \"C:\\Users\\ir\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\ir\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\ir\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\ir\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=90.0.4430.93)\n</code></pre><p>\u6709\u4ec0\u4e48\u95ee\u9898</p></div>"}
{"href": "https://www.cnpython.com/qa/1473017", "title": "\u5982\u4f55\u8c03\u7528\u53e6\u4e00\u4e2apython\u6587\u4ef6\uff0c\u8fd0\u884c\u5b83\uff0c\u5e76\u7528\u65b0\u7684.py\u6587\u4ef6\u66ff\u6362main.py\uff1f", "content": "<div class=\"show-content\"><p>\u4ee5\u4e0b\u662f\u95ee\u9898\u7684\u7b54\u6848\uff1a</p><blockquote><p>How to run a py file from another py file?</p></blockquote><p>\u4f46\u6ca1\u6709\u7b54\u6848\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u7528\u6700\u8fd1\u8fd0\u884c\u7684\u6587\u4ef6\u66ff\u6362main.py\uff0c\u4f46\u4ecd\u7136\u662fjeep main.py\u3002\n\u6211\u4f7f\u7528\u7684\u662fpython 3\uff0c\u6267\u884c\u547d\u4ee4\u5982\u4e0b\uff1a</p><p><code>     exec(open('newfile.py').read())</code></p><p>\u5982\u4f55\u7528newfile.py\u66ff\u6362main.py\uff0c\u4f46\u4fdd\u7559main.py</p></div>"}
{"href": "https://www.cnpython.com/qa/1473021", "title": "\u5728heroku\u4e0a\u90e8\u7f72django\u901a\u9053", "content": "<div class=\"show-content\"><p>\u6211\u5df2\u7ecf\u7528startproject\u3001startapp\u7b49\u521b\u5efa\u4e86\u4e00\u4e2a\u6807\u51c6\u7684django\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u60f3\u5728heroku\u4e0a\u90e8\u7f72\u5b83\u3002\u5f53\u6211\u4f7f\u7528gunicorn\u65f6\uff0c\u6211\u89e3\u51b3\u4e86\u76ee\u5f55\u95ee\u9898\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p><pre class=\"lang-py prettyprint-override\"><code>web: gunicorn --pythonpath enigma enigma.wsgi\n</code></pre><p>\u4f7f\u7528--pythonpath\u9009\u9879\u3002\u4f46\u73b0\u5728\u6211\u7528\u7684\u662fdjango\u9891\u9053\uff0c\u6240\u4ee5\u662fdaphne\u3002\u6709\u7b49\u6548\u7684\u5417\uff1f\u6211\u4ec0\u4e48\u90fd\u8bd5\u8fc7\u4e86\uff0c\u4f46\u6211\u8fd9\u8f88\u5b50\u90fd\u65e0\u6cd5\u542f\u52a8\u8fd9\u4e2a\u9879\u76ee\u3002\u6211\u603b\u662f\u9047\u5230\u8bbe\u7f6e\u6587\u4ef6\u3001\u672a\u52a0\u8f7d\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u5176\u4ed6\u4e0ecwd\u76f8\u5173\u7684\u95ee\u9898</p><p>\u6b63\u5982Heroku Django\u9891\u9053\u6559\u7a0b\u4e2d\u6240\u8ff0\uff0c\u6211\u5c1d\u8bd5\u8fc7\uff1a</p><pre class=\"lang-py prettyprint-override\"><code>daphne enigma.asgi:channel_layer --port 8888\n</code></pre><p>\u8fd9\u5bfc\u81f4asgi\u548c\u8bbe\u7f6e\u51fa\u73b0\u5404\u79cd\u6a21\u5757\u672a\u627e\u5230\u9519\u8bef</p><p>\u6211\u4e5f\u8bd5\u8fc7\u4e86</p><pre class=\"lang-py prettyprint-override\"><code>daphne enigma.enigma.asgi:channel_layer --port 8888\n</code></pre><p>\u8fd9\u5bfc\u81f4\u6a21\u5757\u672a\u627e\u5230enigma.settings\u9519\u8bef</p><p>\u6211\u4e5f\u8bd5\u8fc7\u4e86</p><pre class=\"lang-py prettyprint-override\"><code>cd enigma &amp;&amp; daphne enigma.asgi:channel_layer --port 8888\n</code></pre><p>\u8fd9\u5bfc\u81f4Django\u5e94\u7528\u7a0b\u5e8f\u672a\u5c31\u7eea\u9519\u8bef</p><p>\u6211\u8fd8\u5c1d\u8bd5\u5c06Procfile\u548cpipfiles\u79fb\u52a8\u5230project\u76ee\u5f55\u5e76\u90e8\u7f72\u8be5\u5b50\u76ee\u5f55\uff0c\u4f46\u518d\u6b21\u51fa\u73b0apps not ready\u9519\u8bef</p><p>\u6211\u73b0\u5728\u5df2\u7ecf\u5f00\u59cb\u4e34\u65f6\u4f7f\u7528</p><pre class=\"lang-py prettyprint-override\"><code>cd enigma &amp;&amp; python manage.py runserver 0.0.0.0:$PORT\n</code></pre><p>\u4f46\u6211\u77e5\u9053\u4f60\u4e0d\u5e94\u8be5\u5728\u751f\u4ea7\u4e2d\u8fd9\u6837\u505a</p></div>"}
{"href": "https://www.cnpython.com/qa/1473020", "title": "\u5982\u4f55\u5728Python\u4e2d\u7684\u5f39\u51fa\u6d88\u606f\u4e2d\u663e\u793a\u6309\u94ae\u4ee5\u53ca\u5982\u4f55\u4ea4\u4e92\uff1f", "content": "<div class=\"show-content\"><p>\u6211\u60f3\u5728\u5f39\u51fa\u6d88\u606f\u4e2d\u505a\u4e00\u4e2a\u6309\u94ae\u3002\u6211\u4f7f\u7528PyQt5\u6a21\u5757\u548c\u5f39\u51fa\u7684\u6d88\u606f\u3002\u4f46\u662f\uff0c\u5f53\u6211\u5728\u6d88\u606f\u4e2d\u6309\u4e00\u4e2a\u6309\u94ae\u65f6\uff0c\u6211\u7684\u5f39\u51fa\u6d88\u606f\u4f4d\u4e8e<strong>for</strong></p><pre><code>import sys\nimport io\nimport folium # pip install folium\nfrom PyQt5.QtWidgets import QApplication, QWidget, QHBoxLayout,             QVBoxLayout, QPushButton\nfrom PyQt5.QtWebEngineWidgets import QWebEngineView # pip install       PyQtWebEngine\nimport numpy as np \nimport pandas as pd \nfrom PyQt5.QtGui import QIcon\nfrom PyQt5.QtCore import pyqtSlot\n\n****some codes***\n        for c in range (len(flight_df)):\n        \n            tooltip1 =str(flight_df['x'][c])+\"*** \"+str(flight_df['y'][c])+\"*** \"+str(flight_df['name'][c])\n            folium.Marker([flight_df['x'][c],flight_df['y'][c]], popup=flight_df['x'],tooltip=tooltip1).add_to(m)\n\n        data = io.BytesIO()\n        m.save(data, close_file=False)\n\n        webView = QWebEngineView()\n        webView.setHtml(data.getvalue().decode())\n        layout.addWidget(webView)\n\n\n****some other codes****\n</code></pre><p>\u6211\u7684\u4ee3\u7801\u5728\u4e0a\u9762\u3002\u4f60\u4eec\u80fd\u5e2e\u52a9\u6211\u5982\u4f55\u5728\u5f39\u51fa\u5c4f\u5e55\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8ddf\u968f\u6309\u94ae\uff0c\u4ee5\u53ca\u5982\u4f55\u67e5\u770b\u6309\u94ae\u662f\u5426\u5de5\u4f5c\u5417</p></div>"}
{"href": "https://www.cnpython.com/qa/1473022", "title": "python pygame\u9f20\u6807\u4e8b\u4ef6\u4e0d\u5de5\u4f5c\u4e14\u672a\u5f15\u53d1\u9519\u8bef", "content": "<div class=\"show-content\"><p>\u6211\u662fpython\u65b0\u624b\uff0c\u6211\u6b63\u5728\u5c1d\u8bd5\u7528pygame\u5236\u4f5c\u4e00\u4e2a\u56fd\u9645\u8c61\u68cb\u6e38\u620f\uff0c\u6211\u628a\u68cb\u76d8\u548c\u5404\u79cd\u68cb\u5b50\u4f5c\u4e3a\u5bf9\u8c61\u653e\u5728\u4e0a\u9762\u3002\u8fd9\u662fpieces\u7c7b\uff1a</p><pre><code>class piece(object):\n    def __init__(self, x, y, which):\n        self.x = x\n        self.y = y\n        self.which = which\n        self.square = getsquare(x + PIECE/2, y + PIECE/2)\n        self.dragging = False\n\n    def drag(self, x, y):\n        limit = 720\n        if x &gt;= limit:\n            x = limit\n        self.x = x - PIECE/2\n        self.y = y - PIECE/2\n    def draw(self, win):\n        win.blit(self.which, (self.x, self.y))\n        self.square = getsquare(self.x + PIECE/2, self.y + PIECE/2)\n</code></pre><p>\u5176\u4e2d\uff0cPIECE\u662f\u5e26\u6709\u788e\u7247\u56fe\u50cf\u7684\u7cbe\u7075\u8868\u7684\u5c3a\u5bf8\u3002\u6211\u5c1d\u8bd5\u4e3a\u7247\u6bb5\uff08\u5b58\u50a8\u572864\u4e2a\u5143\u7d20\u7684\u957f\u5217\u8868\u4e2d\uff09\u521b\u5efa\u4e00\u4e2a\u62d6\u52a8\u7cfb\u7edf\uff0c\u53ea\u4f7f\u75281\u4e2a\u7247\u6bb5\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u5f53\u6211\u4f7f\u7528\u5b8c\u6574\u5217\u8868\u65f6\uff0c\u5b83\u505c\u6b62\u4e86\u5de5\u4f5c\uff0c\u6ca1\u6709\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\u3002\u8fd9\u662f\u62d6\u52a8\u7cfb\u7edf\uff1a</p><pre><code>\"\"\"event listeners\"\"\"\nfor event in pygame.event.get():\n    if event.type == pygame.QUIT: #quit event\n        run = False\n    \"\"\"mouse release\"\"\"\n    if event.type == pygame.MOUSEBUTTONUP:\n        clickpos = pygame.mouse.get_pos()\n        x = clickpos[0]\n        y = clickpos[1]\n        sqr = getsquare(x, y)\n        for i in pieceslist:\n            if not i == \"none\":\n                if i.dragging:\n                    i.dragging = False\n                    try:\n                        i.x = squarepos(i.square[0], i.square[1])[1]\n                        i.y = squarepos(i.square[0], i.square[1])[0]\n                    except:\n                        i.x = squarepos(originalsquare[0], originalsquare[1])[1]\n                        i.y = squarepos(originalsquare[0], originalsquare[1])[0]\n    \"\"\"mouse click\"\"\"\n    if event.type == pygame.MOUSEBUTTONDOWN:\n        clickpos = pygame.mouse.get_pos()\n        x = clickpos[0]\n        y = clickpos[1]\n        #print(\"X: \" + str(x) + \", Y: \" + str(y))\n        sqr = getsquare(x, y)\n        for i in pieceslist:\n            if not i == \"none\":\n                if sqr == i.square:\n                    originalsquare = sqr\n                    i.dragging = True\n    \"\"\"mouse drag\"\"\"\n    if event.type == pygame.MOUSEMOTION:\n        clickpos = pygame.mouse.get_pos()\n        x = clickpos[0]\n        y = clickpos[1]\n        #print(\"X: \" + str(x) + \", Y: \" + str(y))\n        sqr = getsquare(x, y)\n        for i in pieceslist:\n            if not i == \"none\":\n                if i.dragging:\n                    i.drag(x, y)\n</code></pre><p>\u7531\u4e8e<code>pieceslist</code>\u662f\u7531<code>piece</code>\u5bf9\u8c61\u548c<code>\"none\"</code>\u5b57\u7b26\u4e32\u586b\u5145\u7684\uff0c\u6240\u4ee5\u6211\u8fdb\u884c\u4e86if\u68c0\u67e5\uff08\u6211\u77e5\u9053\u80af\u5b9a\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u662fpython\u65b0\u624b\uff09</p><p>\u56e0\u6b64\uff0c\u95ee\u9898\u662fclick\u4e8b\u4ef6\u8d77\u4f5c\u7528\uff0c\u5b83\u4fee\u6539\u4e86<code>dragging</code>\uff0c\u4f46\u662f\u5f53\u6d89\u53ca\u5230\u62d6\u52a8\u4e8b\u4ef6\u65f6\uff0c\u5bf9\u8c61\u4e0d\u518d\u6709<code>dragging == True</code></p><p><strong>\u7f16\u8f91\uff1a</strong></p><p><code>squarepos()</code>\u8fd4\u56de\u653e\u7f6e\u7cbe\u7075\u8868\u7684\u5750\u6807\uff0c<code>getsquare()</code>\u6309\u884c-\u5217\u8fd4\u56de\u5750\u6807\uff1a</p><pre><code>def getsquare(x, y):\n    if x &lt;= BORDER or y &lt;= BORDER or x &gt;= squarepos(1,  9)[0] or y &gt;= squarepos(9, 1)[1]:\n        pass #not on the board\n    else:\n        x -= BORDER\n        y -= BORDER\n        x /= SQUARE\n        y /= SQUARE\n        return [int(x) + 1, int(y) + 1]\n</code></pre><p><strong>\u7f16\u8f91\uff1a</strong></p><p>\u7528\u4e8e\u6d4b\u8bd5\u548c\u8c03\u8bd5\u7684\u5b8c\u6574\u7a0b\u5e8f<a href=\"https://github.com/Fatteo/Python\" rel=\"nofollow noreferrer\">here</a></p></div>"}
{"href": "https://www.cnpython.com/qa/1473041", "title": "\u5c06\u6570\u636e\u5e27\u4e2d\u7684\u503c\u5206\u914d\u7ed9\u52a8\u6001\u521b\u5efa\u7684\u53d8\u91cf", "content": "<div class=\"show-content\"><p>\u6211\u6709\u4e00\u4e2a\u7b80\u5355\u7684pandas\u6570\u636e\u6846\u67b6\uff0c\u5176\u4e2d\u6709\u4e00\u5217'mycl'\uff0c\u5176\u4e2d\u67095\u884c\uff0c\u6211\u8bd5\u56fe\u4e3a\u6bcf\u884c\u503c\u521b\u5efa5\u4e2a\u65b0\u53d8\u91cf\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p><pre><code>newcol_1=df['mycol'][0]\nnewcol_2=df['mycol'][1]\nnewcol_3=df['mycol'][2]\nnewcol_4=df['mycol'][3]\nnewcol_5=df['mycol'][4]\n</code></pre><p>\u6211\u4e0d\u60f3\u50cf\u4e0a\u9762\u90a3\u6837\u786c\u7f16\u7801\uff0c\u6211\u4f7f\u7528\u4e0b\u9762\u7684\u201cfor\u5faa\u73af\u201d\uff0c\u4f46\u5b83\u4e0d\u65ad\u629b\u51fa\u201ccannotassign to operator\u201d\u3002\u6211\u77e5\u9053\u8d4b\u503c\u5e94\u8be5\u5728\u53f3\u8fb9\uff0c\u53d8\u91cf\u5e94\u8be5\u5728\u5de6\u8fb9\uff0c\u4f46\u4e0d\u786e\u5b9a\u5982\u4f55\u4f7f\u7528for\u5faa\u73af\u52a8\u6001\u521b\u5efa\u8fd95\u4e2a\u53d8\u91cf</p><pre><code>for i in 0, df.shape[0]-1:\n    #\"newcol_\"+str(i+1) =df['mycol'][i]  # this isn't working\n    newcol_+str(i+1) =df['mycol'][i]     # this also isn't working\n</code></pre><p>\u5982\u679c\u6709\u4eba\u80fd\u5e2e\u4e0a\u5fd9\uff0c\u6211\u5c06\u4e0d\u80dc\u611f\u6fc0\u2026\u2026\u8c22\u8c22</p></div>"}
{"href": "https://www.cnpython.com/qa/1473024", "title": "\u5982\u4f55\u5728Python\u4e2d\u5c06\u8f93\u5165\u6253\u5370\u4e3a\u6574\u6570\u3001\u6d6e\u70b9\u6216\u5b57\u7b26\u4e32", "content": "<div class=\"show-content\"><p>\u6211\u7684\u4ee3\u7801\u7684\u76ee\u7684\u662f\u8ba9\u8f93\u51fa\u7ed9\u51fa\u8f93\u5165\u7684\u7f16\u53f7\u548c\u7c7b\u578b\u3002\u4f8b\u5982\uff1a</p><p>\u5982\u679c\u8f93\u5165\u4e3a\uff1a<code>10</code></p><p>\u8f93\u51fa\u5e94\u8be5\u662f\uff1a<code>10 is an integer</code></p><p>\u5982\u679c\u8f93\u5165\u4e3a\uff1a<code>10.0</code></p><p>\u8f93\u51fa\u5e94\u8be5\u662f\uff1a<code>10.0 is a float</code></p><p>\u5982\u679c\u8f93\u5165\u4e3a\uff1a<code>Ten</code></p><p>\u8f93\u51fa\u5e94\u8be5\u662f\uff1a<code>Ten is a string</code></p><p>\u6211\u662f\u4e00\u4e2a\u7f16\u7a0b\u65b0\u624b\uff0c\u6240\u4ee5\u6211\u8fd8\u4e0d\u77e5\u9053\u4efb\u4f55\u201c\u9ad8\u7ea7\u201d\u51fd\u6570\u3002\u6211\u4e5f\u4e0d\u5e94\u8be5\u7528\u5b83\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5f00\u59cb\u7684\u5b66\u6821\u4f5c\u4e1a\u3002\u901a\u5e38\uff0c\u6211\u5e94\u8be5\u80fd\u591f\u7528if\u3001elif\u548celse\u8bed\u53e5\u4ee5\u53ca\u4e00\u4e9b<code>int ()</code>\u3001<code>float ()</code>\u548c<code>type ()</code>\u51fd\u6570\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</p><pre><code>x = input(\"Enter a number: \")\n\nif type(int(x)) == int:\n    print( x, \" is an integer\")\nelif type(float(x)) == float:\n    print( x, \"is a float\")\nelse:\n    print(x, \"is a string\")\n</code></pre><p>\u4f46\u662f\uff0c\u6211\u4e00\u76f4\u88ab\u5361\u4f4f\uff0c\u56e0\u4e3a\u8f93\u5165\u603b\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u6240\u4ee5\u6211\u60f3\u6211\u5e94\u8be5\u628a\u5b83\u8f6c\u6362\u6210\u6574\u6570/\u6d6e\u70b9\uff0c\u5982\u679c\u6211\u628a\u5b83\u653e\u5728if\uff0celif\uff0celse\u8bed\u53e5\u4e2d\uff0c\u90a3\u4e48\u903b\u8f91\u4e0a\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u6709\u4eba\u77e5\u9053\u6211\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417</p></div>"}
{"href": "https://www.cnpython.com/qa/1473025", "title": "Mininet WiFi\uff1a\u7ad9\u70b9\u53ef\u4ee5ping AP\uff0c\u4f46\u4e0d\u80fd\u53cd\u4e4b\u4ea6\u7136", "content": "<div class=\"show-content\"><p>\u6211\u4f7f\u7528\u865a\u62df\u76d2\uff0c\u5e76\u5b89\u88c5\u4e86Ubuntu 18.04.5\u3002\u6211\u5b89\u88c5\u4e86mininet Wi-fi\uff0c\u5e76\u8fd0\u884c\u4e86python 3\u7a0b\u5e8f\u3002\u62d3\u6251\u7ed3\u6784\u5982\u4e0b\u6240\u793a<a href=\"https://i.stack.imgur.com/AiDsR.png\" rel=\"nofollow noreferrer\">topology</a>\u3002\u6240\u6709\u4e3b\u673a\u90fd\u53ef\u4ee5\u76f8\u4e92ping\uff0c\u5e76\u4e14\u5b83\u4eec\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4e92\u8054\u7f51\uff0c\u4f46\u662f\u7ad9\u70b9\u4e0d\u80fd\u76f8\u4e92ping\uff0c\u5e76\u4e14\u5b83\u4eec\u6ca1\u6709\u4e92\u8054\u7f51\u8fde\u63a5\u3002\u6240\u6709\u7ad9\u70b9\u90fd\u4e0eAPs\u65e0\u7ebf\u8fde\u63a5\uff0c\u5e76\u4e14\u6240\u6709\u7ad9\u70b9\u90fd\u53ef\u4ee5ping\u8fde\u63a5\u5230APs\u7684\u4ea4\u6362\u673a\u3002\u6211\u770b\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002<a href=\"https://i.stack.imgur.com/8j9yS.png\" rel=\"nofollow noreferrer\">links</a></p><pre><code>#!/usr/bin/python\n\nimport sys\nfrom mininet.log import setLogLevel, info\nfrom mn_wifi.cli import CLI\nfrom mn_wifi.net import Mininet_wifi\nfrom mininet.nodelib import NAT\nfrom mininet.node import RemoteController\ndef topology():\n    \"Create a network.\"\n    net = Mininet_wifi()\n\n    info(\"*** Creating nodes\\n\")\n    sta_arg = dict()\n    ap_arg = dict()\n\n\n    s0 = net.addSwitch('s0')\n    ap1 = net.addAccessPoint('ap1', ssid='ssid_ap1', mode='a', channel='36',\n                             position='10,30,0', range='20')\n\n    ap3 = net.addAccessPoint('ap3', ssid=\"ssid_ap3\", mode=\"g\", channel=\"10\",\n                             position='50,30,0', range='20')\n\n    sta1 = net.addStation('sta1', mac='AA:BB:BB:BB:BB:01',\n                           defaultRoute='via 192.168.0.224',\n                           ip='192.168.0.11/240',\n                           position='10,40,0')\n\n    sta2 = net.addStation('sta2', mac='AA:BB:BB:BB:BB:02',\n                           defaultRoute='via 192.168.0.224',\n                           ip='192.168.0.12/24',\n                           position='15,30,0')\n\n    sta3 = net.addStation('sta3', mac='AA:BB:BB:BB:BB:03',\n                           defaultRoute='via 192.168.0.224',\n                           ip='192.168.0.13/24',\n                           position='15,35,0')\n\n    sta4 = net.addStation('sta4', mac='AA:BB:BB:BB:BB:11',\n                           defaultRoute='via 10.0.0.22',\n                           ip='10.0.0.1/24',\n                           position='50,20,0')\n\n    sta5 = net.addStation('sta5', mac='AA:BB:BB:BB:BB:12',\n                           defaultRoute='via 10.0.0.22',\n                           ip='10.0.0.22/24',\n                           position='55,15,0')\n\n    sta6 = net.addStation('sta6', mac='AA:BB:BB:BB:BB:13',\n                           defaultRoute='via 10.0.0.22', \n                           ip='10.0.0.3/24',\n                           position='45,125,0')\n\n    h1 = net.addHost('h1', ip='192.168.0.1', mac='AA:AA:AA:AA:AA:01',\n                     defaultRoute='via 192.168.0.224')\n    h2 = net.addHost('h2', ip='192.168.0.2', mac='AA:AA:AA:AA:AA:02',\n                     defaultRoute='via 192.168.0.224')\n    h3 = net.addHost('h3', ip='192.168.0.3', mac='AA:AA:AA:AA:AA:03',\n                     defaultRoute='via 192.168.0.224')\n    h4 = net.addHost('h4', ip='192.168.0.4', mac='AA:AA:AA:AA:AA:04',\n                     defaultRoute='via 192.168.0.224')\n    h5 = net.addHost('h5', ip='192.168.0.5', mac='AA:AA:AA:AA:AA:05',\n                     defaultRoute='via 192.168.0.224')\n    h6 = net.addHost('h6', ip='192.168.0.6', mac='AA:AA:AA:AA:AA:06',\n                     defaultRoute='via 192.168.0.224')\n\n    c1 = net.addController('c1', controller=RemoteController, ip='0.0.0.0',\n                            protocol='tcp',port=6633)\n   #####################   Link devices to Switch    ######################\n    net.addLink(ap1, s0)\n    net.addLink(h1, s0)\n    net.addLink(h2, s0)\n    net.addLink(h3, s0)\n    net.addLink(h4, s0)\n    net.addLink(h5, s0)\n    net.addLink(h6, s0)\n\n\n    info(\"*** Configuring wifi nodes\\n\")\n    net.configureWifiNodes()\n\n\n    ################   Wireless AP Interface   ##########################\n    print (\"*** Adding Link\")\n    net.addLink(sta1, ap1, bw=10, loss=5)\n    net.addLink(sta2, ap1, bw=10, loss=5)\n    net.addLink(sta3, ap1, bw=10, loss=5)\n\n    #####################    NAT1 Interface    ##########################\n    net.addLink(sta4, ap3, bw=10, delay=5, loss=5)\n    net.addLink(sta5, ap3, bw=10, loss=5)\n    net.addLink(sta6, ap3, bw=10, loss=5)\n\n    ######################   Create NAT for Internet   ####################\n    nat = net.addHost( 'nat', cls=NAT, ip='192.168.0.224',\n                        mac='AA:AA:AA:AA:AA:AA',\n                       subnet='192.168.0.0/24', inNamespace=False)\n    net.addLink(nat, s0)\n\n\n    ###########################     Create RAP        ########################\n    nat1=net.addHost('nat1', cls=NAT, ip='192.168.0.22',\n                                 mac='AA:CC:CC:CC:CC:CC',\n                                 subnet='10.0.0.0/24', inNameSpace=False,\n                                 inetIntf='nat1-eth0', localIntf='nat1-eth1',\n                                 defaultRoute='via 192.168.0.224')\n    net.addLink(nat1,s0)\n    net.addLink(ap3, nat1)\n\n    ########################   Add RAP Interface    ########################\n    nat1.setIP('10.0.0.22/8', intf='nat1-eth1')\n\n\n    info(\"*** Starting network\\n\")\n    net.build()\n    ap1.start([c1])\n\n    if '-v' not in sys.argv:\n        ap1.cmd('ovs-ofctl add-flow ap1 \"priority=0,arp,in_port=1,'\n                'actions=output:in_port,normal\"')\n        ap1.cmd('ovs-ofctl add-flow ap1 \"priority=0,icmp,in_port=1,'\n                'actions=output:in_port,normal\"')\n        ap1.cmd('ovs-ofctl add-flow ap1 \"priority=0,udp,in_port=1,'\n                'actions=output:in_port,normal\"')\n        ap1.cmd('ovs-ofctl add-flow ap1 \"priority=0,tcp,in_port=1,'\n                'actions=output:in_port,normal\"')\n\n    info(\"*** Running CLI\\n\")\n    CLI(net)\n\n    info(\"*** Stopping network\\n\")\n    net.stop()\n\n\nif __name__ == '__main__':\n    setLogLevel('info')\n    topology()\n</code></pre></div>"}
{"href": "https://www.cnpython.com/qa/1473023", "title": "Selenium\u9690\u85cf/\u5305\u88c5\u5143\u7d20\\\u5217\u8868", "content": "<div class=\"show-content\"><p>\u6211\u4e00\u76f4\u5728\u8bd5\u56fe\u7406\u89e3\u4e3a\u4ec0\u4e48\u4e0b\u9762\u7684\u4ee3\u7801\u4e0d\u8d77\u4f5c\u7528\u3002\u6211\u6253\u7b97\u53d1\u9001\u4e00\u4e2a\u952e\u5230\u53e6\u4e00\u4e2aweb\u9009\u9879\u5361\u4e0a\u7684\u641c\u7d22\u8f93\u5165\uff0c\u7136\u540e\u6309\u4e0b\u4e00\u4e2a\u6309\u94ae\u3002\u5728\u8bba\u575b\u4e2d\u9605\u8bfb\u4e86\u7c7b\u4f3c\u7684<a href=\"https://stackoverflow.com/questions/56194094/how-to-fix-this-issue-element-not-interactable-selenium-python\">questions</a>\u4e4b\u540e\uff0c\u6211\u8ba4\u4e3a\u5143\u7d20\u53ef\u80fd\u88ab\u9690\u85cf\u6216\u5305\u88c5\u3002\u600e\u4e48\u627e\u5230\u8fd9\u4e2a\uff1f\u6b64\u5916\uff0c\u6709\u65f6\u5143\u7d20\u4f4d\u4e8e\u5217\u8868\u4e2d\uff0c\u5fc5\u987b\u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u8bbf\u95ee\u3002\u6211\u6240\u7814\u7a76\u7684\u4f8b\u5b50\u5e76\u975e\u5982\u6b64\u3002\u4efb\u4f55\u5e2e\u52a9\u90fd\u5c06\u4e0d\u80dc\u611f\u6fc0</p><pre><code>from selenium import webdriver\nfrom selenium.common.exceptions import *\n\n \nwebdriver_path = \"C:/Users/escob/Documents/Projects/WebScrapingExample/chromedriver.exe\"\n\nmagpie_url = 'https://www.musicmagpie.co.uk/start-selling/'\nsearch_item = \"9781912047734\"\n\noptions = webdriver.ChromeOptions()\nbrowser = webdriver.Chrome (webdriver_path, options = options)\nbrowser.get(magpie_url)\n\nsell_tab = browser.find_element_by_id('pills-media-tab')\nsell_tab.click()\n\n##I have tried the following code with no luck\n#search_bar = browser.find_elements_by_name('searchString')\n#search_bar = browser.find_elements_by_class_name('form-input')\nsearch_bar = browser.find_element_by_xpath(\"//input[@name='searchString']\")\n\n#I am getting elements in a list, the examples I have seen do not need indexing\nsearch_bar[0].send_keys(search_item)\n\n\nbutton = browser.find_element_by_class_name(submit-media-search) #will this work?\nbutton[0].click()  #again in a list?\n</code></pre><p>\u975e\u5e38\u611f\u8c22\u521d\u5b66\u8005Seleniumista\u7684\u5e2e\u52a9</p></div>"}
{"href": "https://www.cnpython.com/qa/1473045", "title": "\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u5217\u8868\uff08\u5b57\u7b26\u4e32\uff09\u662f\u5426\u5305\u542b\u8003\u8651\u987a\u5e8f\u7684\u53e6\u4e00\u4e2a\u5217\u8868\uff08\u5b57\u7b26\u4e32\uff09", "content": "<div class=\"show-content\"><p>\u6211\u6709\u4e24\u4e2a\u5217\u8868\uff08\u6216\u5b57\u7b26\u4e32\uff09\uff1a\u4e00\u4e2a\u662f\u5927\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u5c0f\u7684\u3002\n\u6211\u60f3\u68c0\u67e5\u5927\u7684\uff08A\uff09\u662f\u5426\u5305\u542b\u5c0f\u7684\uff08B\uff09</p><p>\u6211\u7684\u671f\u671b\u5982\u4e0b\uff1a</p><p>\u6848\u4f8b1\u3002B\u662fa\u7684\u5b50\u96c6</p><pre><code>A = [1,2,3]\nB = [1,2] \ncontains(A, B) = True\n</code></pre><p>\u6848\u4f8b2\u3002B\u4e0d\u662fa\u7684\u5b50\u96c6\uff0c\u4f46\u987a\u5e8f[1,2]\u4fdd\u6301\u5728a\u4e2d</p><pre><code>A = [1,3,2]\nB = [1,2]\ncontains(A, B) = True\n</code></pre><p>\u6848\u4f8b3\u3002\u9519\u8bef\uff0c\u56e0\u4e3a4\u4e2d\u4e0d\u662f\u4e00\u4e2a</p><pre><code>A = [1,3,2]\nB = [1,4]\ncontains(A, B) = False\n</code></pre><p>\u6848\u4f8b4\u3002False\uff0c\u56e0\u4e3a\u987a\u5e8f[2,1]\u672a\u5728A\u4e2d\u7ef4\u62a4\uff0c\u5373\u4f7fA\u5305\u542b1\u548c2</p><pre><code>A = [1,3,2]\nB = [2,1]\ncontains(A, B) = False\n</code></pre><p>A\u548cB\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32</p></div>"}
{"href": "https://www.cnpython.com/qa/1473042", "title": "\u5982\u4f55\u5173\u95ed\u7531\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u7684Excel\u6587\u4ef6\uff1f\u5728win32com.client\u4e2d\u4f7f\u7528python", "content": "<div class=\"show-content\"><p>\u6211\u6b63\u5728\u4f7f\u7528Python\u5728SAP GUI\u4e2d\u4f7f\u7528\u5e93win32com.client\u81ea\u52a8\u5316\u4e00\u4e2a\u8fc7\u7a0b</p><p>\u4e00\u5207\u90fd\u8fdb\u884c\u5f97\u5f88\u987a\u5229\uff0c\u76f4\u5230SAP\u5728\u6d41\u7a0b\u7684\u6700\u540e\u9636\u6bb5\u6253\u5f00\u4e00\u4e2aExcel\u6587\u4ef6</p><p>\u6211\u9700\u8981\u5173\u95ed\u6b64\u6587\u4ef6\uff08\u4ec5\u6b64\u6587\u4ef6\uff09</p><p>\u539f\u59cb\u811a\u672c\u6765\u81ea\u4e00\u4e2a.bas\u6587\u4ef6\uff0c\u6211\u5c06\u5fc5\u8981\u7684\u811a\u672c\u91cd\u5199\u4e3aPython\u3002\n\u5728.bas\u6587\u4ef6\u4e2d\uff0cExcel\u6587\u4ef6\u4ee5<code>Workbooks(\"YVA05_********\").Close</code>\u5173\u95ed</p><p>\u8bf7\u5e2e\u6211\u5199\u4e00\u884c\u7b80\u5355\u7684\u4ee3\u7801\uff0c\u53ea\u5173\u95ed\u8fd9\u4e2aExcel\u6587\u4ef6\uff08\u5c31\u50cf\u65e7\u4ee3\u7801\u4e00\u6837\uff0c\u4f46\u5bf9\u4e8e\u6211\u7684Python\u5e94\u7528\u7a0b\u5e8f\uff09\uff0c\u6211\u5c06\u6c38\u8fdc\u611f\u6fc0\u4f60</p><p>\u5e72\u676f</p><pre><code>from datetime import datetime\nfrom win32com.client import Dispatch\nimport win32com.client\nimport time\nimport subprocess\n\n\nexcel = Dispatch(\"Excel.Application\")\n\ntoday = datetime.today()\ntoday_modified = \"{:02}.{:02}.{}\".format(today.month, today.day, today.year)\nmonth_init = \"{:02}.01.{}\".format(today.month, today.year)\nfile_name = f\"{today.year}-{today.month:02}\"\n\ndef extract_data_process(month_init,today_modified,file_name,session):\n    session.findById(\"wnd[0]/usr/ctxtS_SAUDAT-LOW\").text = f\"{month_init}\"\n    session.findById(\"wnd[0]/usr/ctxtS_SAUDAT-HIGH\").text = f\"{today_modified}\"\n    session.findById(\"wnd[0]/tbar[1]/btn[8]\").press()\n    time.sleep(6)\n    session.findById(\"wnd[0]/usr/cntlCONTAINER/shellcont/shell\").pressToolbarContextButton(\"&amp;MB_EXPORT\")\n    session.findById(\"wnd[0]/usr/cntlCONTAINER/shellcont/shell\").selectContextMenuItem(\"&amp;XXL\")\n    session.findById(\"wnd[1]/usr/ctxtDY_PATH\").text = \"C:\\\\Users\\\\*****************\"\n    session.findById(\"wnd[1]/usr/ctxtDY_FILENAME\").text = f\"YVA05_{file_name}.XLSX\"\n    session.findById(\"wnd[1]/tbar[0]/btn[11]\").press()\n\n    # Here the excel is opened\n\n    session.findById(\"wnd[0]/tbar[0]/btn[3]\").press\n\n\n\npathname = r\"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\saplogon.exe\"\n\nsubprocess.Popen(pathname)\ntime.sleep(8)\n\n\nSapGuiAuto = win32com.client.GetObject('SAPGUI')\nif not type(SapGuiAuto) == win32com.client.CDispatch:\n    exit()\n\napplication = SapGuiAuto.GetScriptingEngine\nif not type(application) == win32com.client.CDispatch:\n    SapGuiAuto = None\n    exit()\n    \nconnection = application.OpenConnection(\"*****************\", True)\nif not type(connection) == win32com.client.CDispatch:\n    application = None\n    SapGuiAuto = None\n    exit()\n\nsession = connection.Children(0)\nif not type(session) == win32com.client.CDispatch:\n    connection = None\n    application = None\n    SapGuiAuto = None\n    exit()\n\n\nsession.findById(\"wnd[0]/usr/txtRSYST-MANDT\").text = \"***\"\nsession.findById(\"wnd[0]/usr/txtRSYST-BNAME\").text = \"***********\"\nsession.findById(\"wnd[0]/usr/pwdRSYST-BCODE\").text = \"**************\"\nsession.findById(\"wnd[0]/usr/txtRSYST-LANGU\").text = \"EN\"\nsession.findById(\"wnd[0]\").sendVKey(0)\n\n# time.sleep(2)\n# session.findById(\"wnd[1]\").sendVKey(0)\n# time.sleep(2)\n\nsession.findById(\"wnd[0]/tbar[0]/okcd\").text = \"****\"\nsession.findById(\"wnd[0]/tbar[0]/btn[0]\").press()\nsession.findById(\"wnd[0]/tbar[1]/btn[17]\").press()\nsession.findById(\"wnd[1]/usr/txtV-LOW\").text = \"*********\"\nsession.findById(\"wnd[1]/usr/txtENAME-LOW\").text = \"\"\nsession.findById(\"wnd[1]/tbar[0]/btn[8]\").press()\n\nextract_data_process(month_init,today_modified,file_name,session)\n</code></pre></div>"}
{"href": "https://www.cnpython.com/qa/1473043", "title": "\u4e0ebertopic\u4e00\u8d77\u4f7f\u7528\u7684hdbscan\u6709\u95ee\u9898\uff1aOSError:[Errno 22]\u53c2\u6570\u65e0\u6548", "content": "<div class=\"show-content\"><p>\u6211\u5199\u4f5c\u662f\u56e0\u4e3a\u6211\u6709\u4e00\u4e2a\u95ee\u9898\uff08\u6211\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u611a\u8822\u800c\u660e\u663e\u7684\u4ecb\u7ecd\uff09</p><p>\u6211\u8bd5\u56fe\u4f7f\u7528RStudio\u4e2d\u7684Python\u89e3\u91ca\u5668\u548c<code>reticulate</code>\u6269\u5c55\u6765\u4f7f\u7528BERTopic\u5305\uff1a</p><blockquote><p>Python 3.6.13 (C:/Users/Francesco/AppData/Local/r-miniconda/envs/r-reticulate/python.exe)<br>\nReticulate 1.18.9008 REPL -- A Python interpreter in R.</p></blockquote><p>\u6211\u8bbe\u6cd5\u5b89\u88c5\u4e86\u5b83\n<code>pip3 install bertopic</code></p><p>\u9996\u5148\uff0c\u5c1d\u8bd5\u5b89\u88c5<code>bertopic</code>\u5bfc\u81f4\u9519\u8bef\u91cd\u65b0\u5206\u914d\u5230\u5b83\u7684<code>hdbscan</code>\u4f9d\u8d56\u6027\uff0c\u7279\u522b\u662f\u6240\u4f7f\u7528\u7684\u8f6e\u5b50\uff1b\u6211\u901a\u8fc7\u5eb7\u8fbe\u5b89\u88c5hdbscan\u514b\u670d\u4e86\u8fd9\u4e2a\u95ee\u9898\uff08\u5bf9\u4e8epip\u6765\u8bf4\uff0c\u95ee\u9898\u4f3c\u4e4e\u65e0\u6cd5\u89e3\u51b3\uff09\uff0c\u800c\u4e14\u5728\u5b89\u88c5\u4e4b\u540e\uff0c\u4e24\u4e2a\u90fd\u4f3c\u4e4e\u5b89\u88c5\u597d\u4e86\uff0c\u800c\u4e14\u90fd\u5f88\u597d\uff08pip\u4f1a\u786e\u8ba4\u8fd9\u4e00\u70b9\uff09</p><p>\u4e4b\u540e\uff0c\u6211\u5c1d\u8bd5\u6309\u7167<a href=\"https://towardsdatascience.com/interactive-topic-modeling-with-bertopic-1ea55e7d73d8\" rel=\"nofollow noreferrer\">Medium/Towards Data Science</a>\uff08\u8fd9\u91cc\u662f\u6211\u6b63\u5728\u9075\u5faa\u7684<a href=\"https://colab.research.google.com/drive/1FieRA9fLdkQEGDIMYl0I3MCjSUKVF8C-?usp=sharing#scrollTo=TfhfzqkoSJ1I\" rel=\"nofollow noreferrer\">Colab</a>\u7248\u672c\uff09\u4e2d\u7684\u8f6f\u4ef6\u5305\u6559\u7a0b\u6765\u719f\u6089\u8f6f\u4ef6\u5305\uff0c\u5e76\u68c0\u67e5\u6240\u6709\u5185\u5bb9\u662f\u5426\u6309\u9884\u671f\u5de5\u4f5c</p><p>\u6211\u57fa\u672c\u4e0a\u662f\u5728\u4f7f\u7528\u7684RMarkdown\u6587\u4ef6\u4e2d\u7684Python\u5757\u4e0a\u590d\u5236\u548c\u7c98\u8d34Colab\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u5f53\u6211\u5c1d\u8bd5\u5c06\u6559\u7a0b\u4e2d\u7684\u76f8\u540c\u4ee3\u7801\u5e94\u7528\u5230\u4f7f\u7528\u7684\u76f8\u540c\u6570\u636e\u96c6\u65f6\uff1a</p><pre><code>from sklearn.datasets import fetch_20newsgroups\n\ndocs = fetch_20newsgroups(subset='all',  remove=('headers', 'footers', 'quotes'))['data']\n\nfrom bertopic import BERTopic\n\ntopic_model = BERTopic(language=\"english\", calculate_probabilities=True, verbose=True)\n\ntopics, probs = topic_model.fit_transform(docs)\n</code></pre><p>\u6211\u5f97\u5230\u4ee5\u4e0b\u9519\u8bef\uff1a</p><blockquote><p>Batches: 100%|##########| 589/589 [28:21&lt;00:00,  2.89s/it] <br>\n2021-04-29 16:24:25,973 - BERTopic - Transformed documents to Embeddings<br>\n2021-04-29 16:24:35,752 - BERTopic - Reduced dimensionality with UMAP<br>\nOSError: [Errno 22] Invalid argument</p></blockquote><p>\u7406\u8bba\u4e0a\uff0c\u6839\u636ecolab\u4e0a\u7684\u8f93\u51fa\uff0c\u6211\u5e94\u8be5\u5f97\u5230\uff1a</p><blockquote><p>....................... - BERTopic - Clustered UMAP embeddings with HDBSCAN</p></blockquote><p>\u7531\u4e8e\u6211\u5bf9<code>hdbscan</code>\u6709\u95ee\u9898\uff0c\u6211\u786e\u5b9e\u8ba4\u4e3a\u5b83\u4e0e\u5b83\u6709\u67d0\u79cd\u8054\u7cfb\uff0c\u6211\u8bfb\u4e86\u51e0\u9875GitHub\u548cStackoverflow\u9875\u9762\uff0c\u6307\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u5305\u7684\u95ee\u9898\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u6211\u771f\u7684\u9700\u8981\uff0c\u56e0\u4e3a\u6211\u9700\u8981\u5728\u6211\u7684\u8bba\u6587\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u5305</p><p>\u6709\u4eba\u80fd\u5e2e\u6211\u5417</p><p>PS\uff1a\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u95eestackoverflow\u7684\u95ee\u9898\uff1a\u6211\u5e0c\u671b\u6211\u5199\u4e0b\u6240\u6709\u5fc5\u8981\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u5982\u679c\u7f3a\u5c11\u4e00\u4e9b\u4fe1\u606f\uff0c\u8bf7\u544a\u8bc9\u6211</p></div>"}
{"href": "https://www.cnpython.com/qa/1473049", "title": "\u5728Python\u4e2d\u4ece\u63a9\u7801\u7f51\u683c\u751f\u6210\u56fe\u5f62", "content": "<div class=\"show-content\"><p>\u6211\u6709\u4e00\u4e2a\u5e26\u67091\u548c0\u7684\u201c\u63a9\u7801\u201dnumpy 2D\u6570\u7ec4\uff0c\u4f8b\u5982</p><pre><code>array([[0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0],\n       [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],\n       [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],\n       [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1],\n       [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0],\n       [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0],\n       [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0],\n       [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1],\n       [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],\n       [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],\n       [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0]])\n</code></pre><p>\u6211\u7684\u4efb\u52a1\u662f\u5c06\u8be5\u77e9\u9635\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u5176\u4e2d\u96f6\u4f5c\u4e3a\u4e0e\u5176\u76f4\u63a5\u90bb\u5c45\u76f8\u8fde\u7684\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u672c\u4f8b\u4e2d\u7684\u56fe\u5c06\u5305\u542b\u591a\u4e2a\u56fe\uff08\u5f7c\u6b64\u4e0d\u76f8\u8fde\uff09\uff0c\u5982\uff1a</p><pre><code>*         *---*\n|\n*---*            *\n|                |\n*                *\netc...\n</code></pre><p>\u57fa\u672c\u4e0a\uff0c\u8fd9\u91cc\u7684\u6bcf\u4e2a\u96f6\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u8fb9\u662f\u5230\u5176\u4ed6\u96f6\u7684\u8def\u5f84\uff0c\u8fd9\u4e9b\u96f6\u662f\u5b83\u4eec\u7684\u76f4\u63a5\u90bb\u5c45\uff08\u5728\u9876\u90e8\u3001\u5e95\u90e8\u3001\u53f3\u4fa7\u6216\u5de6\u4fa7\uff09<em>\u8fb9\u7684\u65b9\u5411\u5f88\u91cd\u8981</em>\u8fb9\u53ef\u4ee5\u662f\u5782\u76f4\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u6c34\u5e73\u7684\uff0c\u5c31\u50cf\u5728\u8f93\u5165\u77e9\u9635\u4e2d\u4e00\u6837\u3002\u6211\u7684\u6700\u7ec8\u76ee\u6807\u662f\u4f7f\u7528\u751f\u6210\u7684\u56fe\u5f62/\u56fe\u5f62\u96c6\u5408\u6267\u884c\u8bb8\u591a\u6d4b\u8bd5\uff1a</p><ul><li>\u6240\u6709\u8282\u70b9\u7684\u8fde\u901a\u6027</li><li>\u8fb9\u7684\u6700\u5927\u548c\u6700\u5c0f\u957f\u5ea6\uff08\u6bcf\u4e2a\u65b9\u5411\uff09</li><li>\u7b49\u7b49</li></ul><p>\u6211\u53d1\u73b0\u4e86\u4f18\u79c0\u7684<a href=\"https://networkx.org/documentation/stable/index.html\" rel=\"nofollow noreferrer\">networkx</a>\u5e93\uff0c\u5b83\u4f3c\u4e4e\u80fd\u591f\u4ece\u6570\u7ec4\u751f\u6210\u56fe\u5f62\uff0c\u4f46<a href=\"https://networkx.org/documentation/stable/reference/convert.html#module-networkx.convert_matrix\" rel=\"nofollow noreferrer\">reference</a>\u8bf4\u5b83\u53ea\u80fd\u5c06nd\u6570\u7ec4\u6216pandas\u6570\u636e\u5e27\u89c6\u4e3a\u201c\u90bb\u63a5\u201d\u77e9\u9635\uff0c\u800c\u4e0d\u80fd\u50cf\u6211\u7684\u4f8b\u5b50\u90a3\u6837\u76f4\u63a5\u8868\u793a\u56fe\u5f62</p></div>"}
{"href": "https://www.cnpython.com/qa/1473044", "title": "\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5d4c\u5957\u5217\u8868\u8f6c\u6362\u56de\u5d4c\u5957\u5217\u8868", "content": "<div class=\"show-content\"><p>\u6211\u6709\u4e00\u4e2a\u4ee5\u5b57\u7b26\u4e32\u683c\u5f0f\u5b58\u50a8\u7684\u5d4c\u5957\u5217\u8868\uff0c\u6211\u60f3\u5c06\u5176\u8f6c\u6362\u4e3apython\u5217\u8868</p><pre><code>ll ='[[\"ABC\",7,\"A\",9],[\"ABD\",6,\"B\",8]]'\nll = list(ll)\nprint(ll)\n</code></pre><p>\u6211\u7684\u9884\u671f\u4ea7\u51fa</p><pre><code>[[\"ABC\",7,\"A\",9],[\"ABD\",6,\"B\",8]] \n</code></pre><p>\u63a5\u6536\u8f93\u51fa</p><pre><code>['[', '[', '\"', 'A', 'B', 'C', '\"', ',', '7', ',', '\"', 'A', '\"', ',', '9', ']', ',', '[', '\"', 'A', 'B', 'D', '\"', ',', '6', ',', '\"', 'B', '\"', ',', '8', ']', ']'] \n</code></pre><p>\u8bf7\u5e2e\u5fd9</p></div>"}
{"href": "https://www.cnpython.com/qa/1473047", "title": "TypeError:name\uff08\uff09\u53c2\u65701\u5fc5\u987b\u662funicode\u5b57\u7b26\uff0c\u800c\u4e0d\u662fstr python", "content": "<div class=\"show-content\"><p>\u6211\u8bd5\u56fe\u4f7f\u7528<a href=\"https://github.com/tue-mdse/genderComputer\" rel=\"nofollow noreferrer\">Gender Computer</a>\u5c06\u6027\u522b\u6570\u636e\u751f\u6210\u5230\u6211\u7684\u6570\u636e\u6846\u4e2d\u3002\u8fd9\u662f\u6211\u7684\u4ee3\u7801\uff1a</p><pre><code>import os\nimport pandas as pd\nimport numpy as np\nimport re\n\ncrd = os.getcwd()\ndf_hash = pd.read_csv(crd +\"\\\\hashtag4.csv\", encoding=\"utf-8\")\n\nfrom genderComputer import GenderComputer\ngc = GenderComputer()\n\ndf_hash['gender'] = gc.resolveGender(df_hash['full_name'], None)\n</code></pre><p>\u4f46\u6211\u6709\u4e00\u4e2a\u9519\u8bef\uff1a</p><pre><code>---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n~\\Desktop\\recsys\\genderComputer-master\\nameUtils.py in is_cyrillic(uchr)\n    109 def is_cyrillic(uchr):\n--&gt; 110     try: return cyrillic_letters[uchr]\n    111     except KeyError:\n\nKeyError: 'CoffeeCaine'\n\nDuring handling of the above exception, another exception occurred:\n\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-29-6fd7ed6bd781&gt; in &lt;module&gt;\n----&gt; 1 df_hash['gender'] = gc.resolveGender(df_hash['full_name'], None)\n\n~\\Desktop\\recsys\\genderComputer-master\\genderComputer.py in resolveGender(self, name, country)\n    558         def resolveGender(self, name, country):\n    559                 '''Check if name is written in Cyrillic or Greek script, and transliterate'''\n--&gt; 560                 if only_cyrillic_chars(name) or only_greek_chars(name):\n    561                         name = unidecode(name)\n    562 \n\n~\\Desktop\\recsys\\genderComputer-master\\nameUtils.py in only_cyrillic_chars(unistr)\n    115 def only_cyrillic_chars(unistr):\n    116     return all(is_cyrillic(uchr)\n--&gt; 117         for uchr in unistr if uchr.isalpha())\n    118 \n    119 '''Check whether a given character is written in Greek'''\n\n~\\Desktop\\recsys\\genderComputer-master\\nameUtils.py in &lt;genexpr&gt;(.0)\n    115 def only_cyrillic_chars(unistr):\n    116     return all(is_cyrillic(uchr)\n--&gt; 117         for uchr in unistr if uchr.isalpha())\n    118 \n    119 '''Check whether a given character is written in Greek'''\n\n~\\Desktop\\recsys\\genderComputer-master\\nameUtils.py in is_cyrillic(uchr)\n    110     try: return cyrillic_letters[uchr]\n    111     except KeyError:\n--&gt; 112         return cyrillic_letters.setdefault(uchr, 'CYRILLIC' in unicodedata.name(uchr))\n    113 \n    114 '''Check whether a given string is written in Cyrillic'''\n\nTypeError: name() argument 1 must be a unicode character, not str\n</code></pre><p>\u8fd9\u662f'df_hash['full_name'\u4e2d\u7684\u5185\u5bb9\uff1a</p><p><a href=\"https://i.stack.imgur.com/deFe8.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/deFe8.png\" alt=\"enter image description here\"></a></p><p>\u6211\u77e5\u9053\u7684\u662f\u6211\u9700\u8981\u5bf9\u5217\u4e2d\u7684\u6240\u6709\u503c\u8fdb\u884c\u7f16\u7801\u3002\u60a8\u53ef\u4ee5\u4ece\u7d22\u5f153\u4e2d\u7684<code>CoffeeCaine</code>\u4e2d\u770b\u5230\u9519\u8bef\u3002\u6211\u5df2\u7ecf\u5c1d\u8bd5\u5bf9\u5217\u6216\u6574\u4e2a\u6570\u636e\u5e27\u8fdb\u884c\u7f16\u7801\uff0c\u5982<code>df_hash['full_name'].str.encode(\"utf-8\")</code>\u3001<code>df_hash.full_name.str.encode('utf-8')</code>\uff0c\u4f7f\u7528\u7f16\u7801\u52a0\u8f7dcsv\uff0c\u6216\u8005\u52a0\u8f7d\u5230\u6570\u636e\u5e27\u4e2d\uff0c\u7136\u540e\u4f7f\u7528\u7f16\u7801\u518d\u6b21\u5c06\u5176\u4fdd\u5b58\u5230csv\uff0c\u4f46\u4ecd\u7136\u6ca1\u6709\u6548\u679c</p><p>\u6211\u8bd5\u7740\u7528\u4e00\u4e2a\u50cf\u201cJohn\u201d\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u6765\u4ee3\u66ff\u8fd9\u4e2a\u5217\uff0c\u5b83\u53ef\u4ee5\u5de5\u4f5c\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5217\uff0c\u6240\u6709\u7684\u503c\u90fd\u662f\u201cmale\u201d\u3002\u540c\u6837\uff0c\u5f53\u6211\u5220\u9664<code>CoffeeCaine</code>\u884c\u65f6\uff0c\u9519\u8bef\u4f1a\u50cf\u4ee5\u524d\u4e00\u6837\u518d\u6b21\u51fa\u73b0\u5728\u67d0\u4e9b\u503c\u4e0a\u3002\u6709\u6ca1\u6709\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</p></div>"}
{"href": "https://www.cnpython.com/qa/1473048", "title": "\u5728OpenCV for python\u4e2d\u65ad\u5f00\u89c6\u9891\u6e90\u8fde\u63a5\u65f6\u51fa\u9519", "content": "<div class=\"show-content\"><p>\u6211\u6b63\u5728\u4f7f\u7528OpenCV\uff08cv2\uff09\u8bfb\u53d6\u89c6\u9891\u63d0\u8981\uff0c\u4ee5\u4fbf\u5728\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u4e2d\u663e\u793a\u5b83\u3002\u89c6\u9891\u9988\u9001\u662f\u6765\u81eaMagewell frame grabber\u8bbe\u5907\u7684\u5916\u90e8\u8f93\u5165\uff0c\u8be5\u8bbe\u5907\u901a\u8fc7USB\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\uff0c\u5e76\u901a\u8fc7HDMI\u8fde\u63a5\u5230\u6444\u50cf\u5934\uff08\u7528\u6237\u5728\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u65f6\u73b0\u573a\u6709\u6b64\u786c\u4ef6\uff09\u3002\u5982\u679cUSB\u8fde\u63a5\u4e22\u5931\uff0c\u6211\u60f3\u5411\u7528\u6237\u663e\u793a\u4e00\u4e2a\u8b66\u544a\uff0c\u5982\u679c\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\uff0c\u89c6\u9891\u63d0\u8981\u5e94\u8be5\u91cd\u65b0\u5f00\u59cb\u8fd0\u884c</p><p>\u4f46\u662f\uff0c\u5f53\u6211\u6545\u610f\u65ad\u5f00\u5e27\u6355\u83b7\u5668USB\u8fde\u63a5\u65f6\uff0c\u8fdb\u7a0b\u505c\u6b62\u3002\u6211\u6536\u5230\u4ee5\u4e0b\u9519\u8bef\u6d88\u606f\uff1a</p><pre><code>[ WARN:0] global C:\\projects\\opencv-python\\opencv\\modules\\videoio\\src\\cap_msmf.cpp (1113) SourceReaderCB::OnReadSample videoio(MSMF): OnReadSample() is called with error status: -1072873822\n[ WARN:0] global C:\\projects\\opencv-python\\opencv\\modules\\videoio\\src\\cap_msmf.cpp (1125) SourceReaderCB::OnReadSample videoio(MSMF): async ReadSample() call is failed with error status: -1072873822\n[ WARN:1] global C:\\projects\\opencv-python\\opencv\\modules\\videoio\\src\\cap_msmf.cpp (1159) CvCapture_MSMF::grabFrame videoio(MSMF): can't grab frame. Error: -1072873822\n</code></pre><p>\u6211\u7684\u4ee3\u7801\u5728\u7c7b<code>Camera(threading.Thread)</code>\u4e2d\u8fd0\u884c\uff08<code>Camera</code>\u662f<code>threading.Thread</code>\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u56e0\u6b64\u5177\u6709\u7ebf\u7a0b\u7684\u672c\u673a\u65b9\u6cd5\uff09</p><p>\u5728\u8fd9\u4e2a\u7c7b\u7684<code>__init__</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u8bbe\u7f6e\u4e86<code>self._cam = cv2.VideoCapture(0)</code>\u3002\uff080\u662f\u9ed8\u8ba4\u89c6\u9891\u6e90\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3a\u5e27\u6293\u53d6\u5668\uff09</p><p>\u542f\u52a8\u65f6\uff0c\u7ebf\u7a0b\u672c\u673a\u65b9\u6cd5<code>start()</code>\u79f0\u4e3a<code>super().start()</code>\u3002\u8fd9\u5c06\u8c03\u7528<code>run()</code><code>run()</code>\u8c03\u7528<code>__grab_frame</code>\uff0c\u5982\u4e0b\u6240\u793a\uff08\u7b80\u5316\uff09\uff1a</p><pre class=\"lang-py prettyprint-override\"><code>def __grab_frame(self):\n    # Capture frame\n    success, next_frame = self._cam.read() #success is bool value telling if the frame was grabbed. \n\n    if success:\n        frame_dict = dict([relevant data to be parsed on to image_observers, incl. next_frame])\n        self.__notify_image_observers(frame_dict)\n    else:\n        print('not connected')\n</code></pre><p>\u5f53\u6211\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\u65f6\uff0c\u4e00\u5207\u90fd\u6b63\u5e38\uff0c\u76f4\u5230\u6211\u62d4\u51faUSB\u3002\u7136\u540e\u6211\u5f97\u5230\u4e0a\u9762\u663e\u793a\u7684\u4e09\u884c\u9519\u8bef\u6d88\u606f\uff0c\u540e\u9762\u662f<code>\"not connected\"</code>\uff0c\u7136\u540e\u4e00\u5207\u90fd\u505c\u6b62\u4e86</p><p>\u7136\u540e\uff0c\u5f53\u6211\u91cd\u65b0\u8fde\u63a5\u5e27\u6355\u83b7\u5668\u65f6\uff0c\u6bcf\u9694\u51e0\u79d2\u949f\u5c31\u4f1a\u91cd\u590d\u6536\u5230\u6b64\u6d88\u606f\uff08\u8bf7\u6ce8\u610f\u65b0\u7684\u9519\u8befID\uff01\uff09\uff1a</p><pre><code>[ WARN:1] global C:\\projects\\opencv-python\\opencv\\modules\\videoio\\src\\cap_msmf.cpp (1159) CvCapture_MSMF::grabFrame videoio(MSMF): can't grab frame. Error: -2147483638\n</code></pre><p>\u3002\u3002\u3002\u7136\u540e\u662fprint <code>\"not connected\"</code></p><p>\u6211\u5c1d\u8bd5\u901a\u8fc7\u542f\u7528\u5185\u7f6e\u7b14\u8bb0\u672c\u7535\u8111\u6444\u50cf\u5934\u6765\u91cd\u73b0\u9519\u8bef\uff0c\u56e0\u6b64\u6211\u6709\u4e24\u4e2a\u529f\u80fd\u89c6\u9891\u6e90\u3002\u7136\u540e\u6211\u7981\u7528\u5185\u7f6e\u6444\u50cf\u5934\uff08source=0\uff09\uff0c\u4ee5\u67e5\u770bOpenCV\u662f\u5426\u80fd\u591f\u5207\u6362\u5230\u5176\u4ed6\u53ef\u7528\u7684\u89c6\u9891\u6e90\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4f1a\u6536\u5230\u76f8\u540c\u7684\u9519\u8bef\u6d88\u606f\u3002\u56e0\u6b64\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u4e0e\u89c6\u9891\u6e90\u65ad\u5f00\u8fde\u63a5\u800c\u4e0d\u662f\u6ca1\u6709\u53ef\u7528\u89c6\u9891\u6e90\u6709\u5173\u7684\u95ee\u9898</p><p>\u4efb\u4f55\u5e2e\u52a9\u90fd\u5c06\u4e0d\u80dc\u611f\u6fc0</p></div>"}
{"href": "https://www.cnpython.com/qa/1473046", "title": "Scikitfeature CFS\u5728python\u4e0a\u5d29\u6e83", "content": "<div class=\"show-content\"><p>\u6211\u8bd5\u56fe\u5728python\u4e2d\u7684\u6570\u636e\u5e27\u4e0a\u6267\u884c\u57fa\u4e8e\u76f8\u5173\u6027\u7684\u7279\u6027\u9009\u62e9\uff08CFS\uff09\u3002\u6211\u4f7f\u7528scikit\u7684CFS\u7279\u6027\uff1a<a href=\"https://github.com/jundongl/scikit-feature/blob/master/skfeature/function/statistical_based/CFS.py\" rel=\"nofollow noreferrer\">https://github.com/jundongl/scikit-feature/blob/master/skfeature/function/statistical_based/CFS.py</a>-\u8fd9\u662f\u7b97\u6cd5</p><p>\u6211\u7684\u6570\u636e\u96c6\u6709<code>100+ features</code>\u548c<code>2119 rows</code>\u3002\u5f53\u6211\u8fd0\u884c\u7b97\u6cd5\u65f6\uff0c\u5b83\u4e0d\u4f1a\u7ed3\u675f\u3002\u5b83\u6700\u7ec8\u5d29\u6e83\u4e86\uff0c\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48</p><p>\u6211\u901a\u8fc7\u6765\u81ea\u540c\u4e00\u5b58\u50a8\u5e93\u7684\u5176\u4ed6\u7b97\u6cd5\u8fd0\u884c\u6211\u7684\u6570\u636e\u96c6\uff0c\u6211\u6ca1\u6709\u95ee\u9898\u3002\u5f53\u6211\u8fd9\u6837\u505a\u7684\u65f6\u5019\uff0c\u6211\u5728WEKA\u4e5f\u6ca1\u6709\u95ee\u9898</p><p>\u8fd9\u662f\u6211\u7684\u5bc6\u7801\uff1a</p><pre><code>self.dataset = pd.DataFrame(pd.read_csv(filenames[0], encoding = 'latin-1'))\nself.X = self.dataset.iloc[:, :-1].values\nself.y = self.dataset.iloc[:, -1].values\nX_train, X_test, y_train, y_test = train_test_split(self.X, self.y, test_size=0.2,random_state=0)\nscore = CFS.cfs(X_train, y_train) # this doesn't end and eventually crashes\nprint(score)\n\n</code></pre><p>\u4f60\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4ee5\u53ca\u6211\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417</p><p>\u8c22\u8c22</p></div>"}
{"href": "https://www.cnpython.com/qa/1473050", "title": "Matplotlib Funcanimation\u5728Qt5Agg\u540e\u7aef\u4e2d\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u65f6\u6062\u590d\u5faa\u73af", "content": "<div class=\"show-content\"><p><strong>TL\uff1b\u533b\u751f\uff1a</strong></p><p><code>matplotlib.backends.backend_qt5.TimerQT</code>\u67e5\u770bems\u4ee5\u4fdd\u5b58\u5bf9\u4ee5\u524d\u8fd0\u884c\u8fc7\u7684\u52a8\u753b\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5373\u4f7f\u5728\u4f7f\u7528<code>animation.event_source.stop()</code>\u4e4b\u540e\u4e5f\u662f\u5982\u6b64\u3002\u8c03\u6574\u5e94\u7528\u7a0b\u5e8f\u7a97\u53e3\u7684\u5927\u5c0f\u540e\uff0c\u52a8\u753b\u5faa\u73af\u5c06\u4ece\u539f\u6765\u7684\u4f4d\u7f6e\u6062\u590d<code>del self.animation</code>\u6ca1\u6709\u5e2e\u52a9\u3002\u6211\u600e\u6837\u624d\u80fd\u907f\u514d\u8fd9\u79cd\u60c5\u51b5</p><p><strong>\u4e0a\u4e0b\u6587</strong></p><p>\u6211\u6b63\u5728\u7f16\u5199\u4e00\u4e2aGUI Python\u5e94\u7528\u7a0b\u5e8f\uff08PyQt5\u3001Python3.8\u3001Matplotlib 3.3.4\uff09\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u7ed8\u5236\u548c\u5206\u6790\u4e00\u4e9b\u6570\u636e\u3002\u90e8\u5206\u5206\u6790\u8981\u6c42\u7528\u6237\u9009\u62e9\u6253\u5370\u6570\u636e\u7684\u8303\u56f4\u3002\u6211\u6b63\u5728\u4f7f\u7528matplotlib\u52a8\u753b\u5b9e\u65f6\u663e\u793a\u9009\u5b9a\u7684\u6570\u636e\u70b9\u548c\u5176\u4ed6\u76f8\u5173\u4fe1\u606f\uff1a</p><p><img src=\"https://i.stack.imgur.com/iPK8r.gif\" alt=\"\"></p><p>\u4e00\u5207\u90fd\u6309\u9884\u671f\u8fdb\u884c\uff1a\u4e00\u65e6\u7528\u6237\u7ed3\u675f\u4e0e\u60c5\u8282\u7684\u4ea4\u4e92\uff0c\u52a8\u753b\u5c31\u4f1a\u505c\u6b62\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5982\u679c\u7528\u6237\u8c03\u6574\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u52a8\u753b\u5faa\u73af\u5c06\u6062\u590d\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff08\u901a\u8fc7\u6253\u5370\u7b2c<code>i</code>\u5e27\u7f16\u53f7\u8fdb\u884c\u68c0\u67e5\uff09\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u77ed\u7684gif\u6765\u8bf4\u660e\u6709\u95ee\u9898\u7684\u884c\u4e3a</p><p><img src=\"https://i.stack.imgur.com/jNUa2.gif\" alt=\"\"></p><p>\u5982\u679c\u5728\u8c03\u6574\u5927\u5c0f\u4e4b\u524d\u6267\u884c\u4e86\u591a\u4e2a\u52a8\u753b\uff0c\u5219\u5728\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u65f6\uff0c\u6240\u6709\u8fd9\u4e9b\u52a8\u753b\u5c06\u540c\u65f6\u5f00\u59cb\u8fd0\u884c</p><p><strong>\u793a\u4f8b\u4ee3\u7801</strong></p><p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4ee3\u7801\u6bb5\uff0c\u53ef\u4ee5\u8fd0\u884c\u8be5\u4ee3\u7801\u6bb5\u6765\u91cd\u73b0\u6240\u63cf\u8ff0\u7684\u884c\u4e3a\uff1a</p><pre><code>import sys\nimport matplotlib\nfrom matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg\nfrom matplotlib.figure import Figure\nimport matplotlib.animation as animation\n\nfrom PyQt5 import QtCore, QtWidgets\n\nmatplotlib.use(\"Qt5Agg\")\n\n\nclass MplCanvas(FigureCanvasQTAgg):\n    def __init__(self, parent=None, width=5, height=4, dpi=100):\n        fig = Figure(figsize=(width, height), dpi=dpi)\n        self.axes = fig.add_subplot(111)\n\n        super().__init__(fig)\n\n        self._ani = None\n        self.plots = None\n        self.loop = None\n\n    def animation(self):\n        self.plot = [self.axes.plot([], [])[0]]\n\n        self._ani = animation.FuncAnimation(\n            self.figure,\n            self._animate_test,\n            init_func=self._init_test,\n            interval=40,\n            blit=True,\n        )\n        self.figure.canvas.mpl_connect(\"button_press_event\", self._on_mouse_click)\n\n        self.loop = QtCore.QEventLoop()\n        self.loop.exec()\n\n        self._ani.event_source.stop()\n\n    def _init_test(self):\n        return self.plot\n\n    def _animate_test(self, i):\n        print(f\"Running animation with frame {i}\")\n\n        return self.plot\n\n    def _on_mouse_click(self, event):\n        self.loop.quit()\n\n\nclass MainWindow(QtWidgets.QMainWindow):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.setObjectName(\"MainWindow\")\n        self.resize(1000, 600)\n\n        self.centralwidget = QtWidgets.QWidget()\n        self.horizontal_layout = QtWidgets.QHBoxLayout()\n\n        self.centralwidget.setLayout(self.horizontal_layout)\n\n        self.mpl_canvas = MplCanvas(self.centralwidget)\n        self.button = QtWidgets.QToolButton(self.centralwidget)\n        self.button.setText(\"Test button\")\n\n        self.horizontal_layout.addWidget(self.mpl_canvas)\n        self.horizontal_layout.addWidget(self.button)\n\n        self.button.clicked.connect(self._button_clicked)\n\n        self.setCentralWidget(self.centralwidget)\n\n    def _button_clicked(self):\n        self.mpl_canvas.animation()\n\n\napp = QtWidgets.QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\napp.exec()\n\nsys.exit()\n</code></pre><p>\u8fd0\u884c\u6b64\u4ee3\u7801\u6bb5\u540e\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u91cd\u73b0\u884c\u4e3a\uff1a</p><ol><li>\u70b9\u51fb\u6d4b\u8bd5\u6309\u94ae\uff1a\u52a8\u753b\u5c06\u5f00\u59cb\uff0c\u5e27\u53f7\u5c06\u6253\u5370\u5230\u63a7\u5236\u53f0\u674e&gt;</li><li>\u5355\u51fb\u7ed8\u56fe\u4ee5\u505c\u6b62\u52a8\u753b\uff1a\u5e27\u7f16\u53f7\u5c06\u505c\u6b62\u6253\u5370\u674e&gt;</li><li>\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\uff1a\u5e27\u7f16\u53f7\u5e94\u4ece\u4e0a\u4e00\u4e2a\u52a8\u753b\u7684\u6700\u540e\u4e00\u5e27\u5f00\u59cb\u6062\u590d\u6253\u5370\u674e&gt;</li></ol><p><strong>\u6211\u7684\u5047\u8bbe</strong></p><p>\u6211\u6000\u7591<code>matplotlib.backends.backend_qt5.TimerQT</code>\u5305\u542b\u5bf9\u5148\u524d\u542f\u52a8\u7684\u52a8\u753b\u7684\u5f15\u7528\uff08weakref\uff1f\uff09\u3002\u5728\u7a97\u53e3\u8c03\u6574\u5927\u5c0f\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u53ef\u80fd\u4f1a\u8bf7\u6c42\u91cd\u753b\u5e76\u91cd\u65b0\u542f\u52a8\u6240\u6709\u4ee5\u524d\u7684\u52a8\u753b\u3002\u6211\u4ece<a href=\"https://stackoverflow.com/questions/32280140/cannot-delete-matplotlib-animation-funcanimation-objects\">previous question</a>\u4e86\u89e3\u5230<code>self._ani.event_source.stop()</code>\u5e94\u8be5\u4ece\u8ba1\u65f6\u5668\u56de\u8c03\u4e2d\u6ce8\u9500\u52a8\u753b\u5bf9\u8c61\uff0c\u4f46\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u5b83\u5728\u8fd9\u91cc\u4e0d\u8d77\u4f5c\u7528</p><p><strong>\u6211\u5c1d\u8bd5\u8fc7\u7684</strong></p><ol><li>\u6211\u8bd5\u56fe\u79fb\u9664<code>QtCore.QEventLoop()</code>\uff0c\u4f46\u8fd9\u79cd\u884c\u4e3a\u4ecd\u7136\u5b58\u5728\u674e&gt;</li><li>\u6211\u8bd5\u56fe\u5728<code>self._ani.event_source.stop()</code>\u4e4b\u540e<code>del self._ani</code>\uff0c\u4f46\u8fd9\u79cd\u884c\u4e3a\u4ecd\u7136\u5b58\u5728\u3002\u5373\u4f7f\u5220\u9664\u4e86<code>self._ani</code>\uff08\u4f7f\u7528<code>hasattr</code>\u8fdb\u884c\u68c0\u67e5\uff09\uff0c\u5728\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u65f6\uff0c\u52a8\u753b\u5faa\u73af\u4e5f\u4f1a\u5728\u5176\u4fdd\u7559\u7684\u5e27\u5904\u91cd\u65b0\u542f\u52a8\u674e&gt;</li><li>\u6211\u8bd5\u56fe\u4fdd\u5b58{<cd13>}\u7684{<cd12>}\uff0c\u7136\u540e\u5728{<cd15>}\u7ed3\u675f\u540e{<cd14>}\uff0c\u4f46\u884c\u4e3a\u4ecd\u7136\u5b58\u5728\u674e&gt;<li>\u641c\u7d22Stackoverflow\u4ee5\u67e5\u627e\u7c7b\u4f3c\u95ee\u9898\uff0c\u4f46\u9664\u4e86\u4e0a\u9762\u5f15\u7528\u7684\u6848\u4f8b\u5916\uff0c\u672a\u627e\u5230\u4efb\u4f55\u7c7b\u4f3c\u6848\u4f8b\u674e&gt;</li></cd14></cd15></cd12></cd13></li></ol><p><strong>\u5e2e\u52a9</strong></p><p>\u6211\u4e0d\u77e5\u9053\u76ee\u524d\u8fd8\u6709\u4ec0\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u7684\uff0c\u4efb\u4f55\u5efa\u8bae\u90fd\u5c06\u4e0d\u80dc\u611f\u6fc0\uff01\u6211\u5bf9Qt\u3001Python\u548cStackoverlow\u90fd\u662f\u65b0\u624b\uff0c\u6240\u4ee5\u5982\u679c\u6211\u9700\u8981\u8fdb\u4e00\u6b65\u6f84\u6e05\uff0c\u8bf7\u544a\u8bc9\u6211\u3002\u5982\u679c\u9700\u8981\uff0c\u6211\u53ef\u4ee5\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\u7684\u5b8c\u6574\u4ee3\u7801\uff0c\u8fd8\u53ef\u4ee5\u5728<code>self._ani.event_source.stop()</code>\u4e4b\u540e\u63d0\u4f9b\u52a8\u753b\u5bf9\u8c61\u7684objgraph\u68c0\u67e5</p></div>"}
